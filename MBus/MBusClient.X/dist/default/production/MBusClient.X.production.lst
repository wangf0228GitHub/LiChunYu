

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 16 16:40:08 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15344
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.40
    44                           ; Generated 02/12/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F15344 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  0119                     	;# 
   106  0119                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011A                     	;# 
   110  011A                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011B                     	;# 
   116  011C                     	;# 
   117  011C                     	;# 
   118  011C                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  011E                     	;# 
   123  011E                     	;# 
   124  011E                     	;# 
   125  011F                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  011F                     	;# 
   129  011F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  018E                     	;# 
   133  018F                     	;# 
   134  0190                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  020C                     	;# 
   138  020C                     	;# 
   139  020D                     	;# 
   140  020E                     	;# 
   141  020F                     	;# 
   142  020F                     	;# 
   143  0210                     	;# 
   144  0210                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  028C                     	;# 
   148  028C                     	;# 
   149  028D                     	;# 
   150  028D                     	;# 
   151  028E                     	;# 
   152  028F                     	;# 
   153  0290                     	;# 
   154  0291                     	;# 
   155  030C                     	;# 
   156  030C                     	;# 
   157  030D                     	;# 
   158  030E                     	;# 
   159  030F                     	;# 
   160  0310                     	;# 
   161  0310                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0314                     	;# 
   166  0314                     	;# 
   167  0315                     	;# 
   168  0316                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  031C                     	;# 
   174  031C                     	;# 
   175  031D                     	;# 
   176  031E                     	;# 
   177  038C                     	;# 
   178  038C                     	;# 
   179  038D                     	;# 
   180  038E                     	;# 
   181  058C                     	;# 
   182  058C                     	;# 
   183  058D                     	;# 
   184  058E                     	;# 
   185  058F                     	;# 
   186  058F                     	;# 
   187  0590                     	;# 
   188  0591                     	;# 
   189  0592                     	;# 
   190  0593                     	;# 
   191  059C                     	;# 
   192  059C                     	;# 
   193  059D                     	;# 
   194  059D                     	;# 
   195  059E                     	;# 
   196  059F                     	;# 
   197  060C                     	;# 
   198  060D                     	;# 
   199  060E                     	;# 
   200  060F                     	;# 
   201  0610                     	;# 
   202  0611                     	;# 
   203  0612                     	;# 
   204  0613                     	;# 
   205  0614                     	;# 
   206  070C                     	;# 
   207  070D                     	;# 
   208  070E                     	;# 
   209  070F                     	;# 
   210  0710                     	;# 
   211  0711                     	;# 
   212  0712                     	;# 
   213  0713                     	;# 
   214  0716                     	;# 
   215  0717                     	;# 
   216  0718                     	;# 
   217  0719                     	;# 
   218  071A                     	;# 
   219  071B                     	;# 
   220  071C                     	;# 
   221  071D                     	;# 
   222  0796                     	;# 
   223  0797                     	;# 
   224  0798                     	;# 
   225  0799                     	;# 
   226  079A                     	;# 
   227  079B                     	;# 
   228  080C                     	;# 
   229  080D                     	;# 
   230  080E                     	;# 
   231  080F                     	;# 
   232  0810                     	;# 
   233  0811                     	;# 
   234  0812                     	;# 
   235  0813                     	;# 
   236  0814                     	;# 
   237  081A                     	;# 
   238  081A                     	;# 
   239  081B                     	;# 
   240  081C                     	;# 
   241  081C                     	;# 
   242  081D                     	;# 
   243  081E                     	;# 
   244  081F                     	;# 
   245  088C                     	;# 
   246  088D                     	;# 
   247  088E                     	;# 
   248  088F                     	;# 
   249  0890                     	;# 
   250  0891                     	;# 
   251  0892                     	;# 
   252  0893                     	;# 
   253  0895                     	;# 
   254  0896                     	;# 
   255  090C                     	;# 
   256  090E                     	;# 
   257  090F                     	;# 
   258  091F                     	;# 
   259  098F                     	;# 
   260  098F                     	;# 
   261  0990                     	;# 
   262  0991                     	;# 
   263  0992                     	;# 
   264  0993                     	;# 
   265  0994                     	;# 
   266  0995                     	;# 
   267  0996                     	;# 
   268  0997                     	;# 
   269  0A19                     	;# 
   270  0A19                     	;# 
   271  0A1A                     	;# 
   272  0A1A                     	;# 
   273  0A1B                     	;# 
   274  0A1B                     	;# 
   275  0A1B                     	;# 
   276  0A1C                     	;# 
   277  0A1C                     	;# 
   278  0A1D                     	;# 
   279  0A1D                     	;# 
   280  0A1E                     	;# 
   281  0A1E                     	;# 
   282  0A1F                     	;# 
   283  0A1F                     	;# 
   284  0A1F                     	;# 
   285  1E0F                     	;# 
   286  1E10                     	;# 
   287  1E11                     	;# 
   288  1E12                     	;# 
   289  1E13                     	;# 
   290  1E14                     	;# 
   291  1E15                     	;# 
   292  1E16                     	;# 
   293  1E17                     	;# 
   294  1E18                     	;# 
   295  1E19                     	;# 
   296  1E1A                     	;# 
   297  1E1B                     	;# 
   298  1E1C                     	;# 
   299  1E1D                     	;# 
   300  1E1E                     	;# 
   301  1E1F                     	;# 
   302  1E20                     	;# 
   303  1E21                     	;# 
   304  1E22                     	;# 
   305  1E23                     	;# 
   306  1E24                     	;# 
   307  1E25                     	;# 
   308  1E26                     	;# 
   309  1E27                     	;# 
   310  1E28                     	;# 
   311  1E29                     	;# 
   312  1E2A                     	;# 
   313  1E2B                     	;# 
   314  1E2C                     	;# 
   315  1E2D                     	;# 
   316  1E2E                     	;# 
   317  1E2F                     	;# 
   318  1E30                     	;# 
   319  1E31                     	;# 
   320  1E32                     	;# 
   321  1E33                     	;# 
   322  1E34                     	;# 
   323  1E35                     	;# 
   324  1E36                     	;# 
   325  1E37                     	;# 
   326  1E8F                     	;# 
   327  1E90                     	;# 
   328  1E91                     	;# 
   329  1E92                     	;# 
   330  1E93                     	;# 
   331  1E9C                     	;# 
   332  1EA1                     	;# 
   333  1EA2                     	;# 
   334  1EB1                     	;# 
   335  1EBB                     	;# 
   336  1EBC                     	;# 
   337  1EBD                     	;# 
   338  1EBE                     	;# 
   339  1EC3                     	;# 
   340  1EC5                     	;# 
   341  1EC6                     	;# 
   342  1EC7                     	;# 
   343  1ECB                     	;# 
   344  1ECC                     	;# 
   345  1ECD                     	;# 
   346  1ECE                     	;# 
   347  1F10                     	;# 
   348  1F11                     	;# 
   349  1F12                     	;# 
   350  1F13                     	;# 
   351  1F14                     	;# 
   352  1F15                     	;# 
   353  1F1C                     	;# 
   354  1F1D                     	;# 
   355  1F1E                     	;# 
   356  1F1F                     	;# 
   357  1F20                     	;# 
   358  1F21                     	;# 
   359  1F22                     	;# 
   360  1F23                     	;# 
   361  1F24                     	;# 
   362  1F25                     	;# 
   363  1F26                     	;# 
   364  1F27                     	;# 
   365  1F38                     	;# 
   366  1F39                     	;# 
   367  1F3A                     	;# 
   368  1F3B                     	;# 
   369  1F3C                     	;# 
   370  1F3D                     	;# 
   371  1F3E                     	;# 
   372  1F3F                     	;# 
   373  1F43                     	;# 
   374  1F44                     	;# 
   375  1F45                     	;# 
   376  1F46                     	;# 
   377  1F47                     	;# 
   378  1F48                     	;# 
   379  1F49                     	;# 
   380  1F4A                     	;# 
   381  1F4E                     	;# 
   382  1F4F                     	;# 
   383  1F50                     	;# 
   384  1F51                     	;# 
   385  1F52                     	;# 
   386  1F53                     	;# 
   387  1F54                     	;# 
   388  1F55                     	;# 
   389  1FE4                     	;# 
   390  1FE5                     	;# 
   391  1FE6                     	;# 
   392  1FE7                     	;# 
   393  1FE8                     	;# 
   394  1FE8                     	;# 
   395  1FE9                     	;# 
   396  1FEA                     	;# 
   397  1FEA                     	;# 
   398  1FEB                     	;# 
   399  1FED                     	;# 
   400  1FEE                     	;# 
   401  1FEF                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0119                     	;# 
   430  0119                     	;# 
   431  0119                     	;# 
   432  011A                     	;# 
   433  011A                     	;# 
   434  011A                     	;# 
   435  011B                     	;# 
   436  011B                     	;# 
   437  011B                     	;# 
   438  011B                     	;# 
   439  011B                     	;# 
   440  011C                     	;# 
   441  011C                     	;# 
   442  011C                     	;# 
   443  011D                     	;# 
   444  011D                     	;# 
   445  011D                     	;# 
   446  011E                     	;# 
   447  011E                     	;# 
   448  011E                     	;# 
   449  011F                     	;# 
   450  011F                     	;# 
   451  011F                     	;# 
   452  011F                     	;# 
   453  011F                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  018E                     	;# 
   457  018F                     	;# 
   458  0190                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  020C                     	;# 
   462  020C                     	;# 
   463  020D                     	;# 
   464  020E                     	;# 
   465  020F                     	;# 
   466  020F                     	;# 
   467  0210                     	;# 
   468  0210                     	;# 
   469  0211                     	;# 
   470  0211                     	;# 
   471  028C                     	;# 
   472  028C                     	;# 
   473  028D                     	;# 
   474  028D                     	;# 
   475  028E                     	;# 
   476  028F                     	;# 
   477  0290                     	;# 
   478  0291                     	;# 
   479  030C                     	;# 
   480  030C                     	;# 
   481  030D                     	;# 
   482  030E                     	;# 
   483  030F                     	;# 
   484  0310                     	;# 
   485  0310                     	;# 
   486  0311                     	;# 
   487  0312                     	;# 
   488  0313                     	;# 
   489  0314                     	;# 
   490  0314                     	;# 
   491  0315                     	;# 
   492  0316                     	;# 
   493  0318                     	;# 
   494  0318                     	;# 
   495  0319                     	;# 
   496  031A                     	;# 
   497  031C                     	;# 
   498  031C                     	;# 
   499  031D                     	;# 
   500  031E                     	;# 
   501  038C                     	;# 
   502  038C                     	;# 
   503  038D                     	;# 
   504  038E                     	;# 
   505  058C                     	;# 
   506  058C                     	;# 
   507  058D                     	;# 
   508  058E                     	;# 
   509  058F                     	;# 
   510  058F                     	;# 
   511  0590                     	;# 
   512  0591                     	;# 
   513  0592                     	;# 
   514  0593                     	;# 
   515  059C                     	;# 
   516  059C                     	;# 
   517  059D                     	;# 
   518  059D                     	;# 
   519  059E                     	;# 
   520  059F                     	;# 
   521  060C                     	;# 
   522  060D                     	;# 
   523  060E                     	;# 
   524  060F                     	;# 
   525  0610                     	;# 
   526  0611                     	;# 
   527  0612                     	;# 
   528  0613                     	;# 
   529  0614                     	;# 
   530  070C                     	;# 
   531  070D                     	;# 
   532  070E                     	;# 
   533  070F                     	;# 
   534  0710                     	;# 
   535  0711                     	;# 
   536  0712                     	;# 
   537  0713                     	;# 
   538  0716                     	;# 
   539  0717                     	;# 
   540  0718                     	;# 
   541  0719                     	;# 
   542  071A                     	;# 
   543  071B                     	;# 
   544  071C                     	;# 
   545  071D                     	;# 
   546  0796                     	;# 
   547  0797                     	;# 
   548  0798                     	;# 
   549  0799                     	;# 
   550  079A                     	;# 
   551  079B                     	;# 
   552  080C                     	;# 
   553  080D                     	;# 
   554  080E                     	;# 
   555  080F                     	;# 
   556  0810                     	;# 
   557  0811                     	;# 
   558  0812                     	;# 
   559  0813                     	;# 
   560  0814                     	;# 
   561  081A                     	;# 
   562  081A                     	;# 
   563  081B                     	;# 
   564  081C                     	;# 
   565  081C                     	;# 
   566  081D                     	;# 
   567  081E                     	;# 
   568  081F                     	;# 
   569  088C                     	;# 
   570  088D                     	;# 
   571  088E                     	;# 
   572  088F                     	;# 
   573  0890                     	;# 
   574  0891                     	;# 
   575  0892                     	;# 
   576  0893                     	;# 
   577  0895                     	;# 
   578  0896                     	;# 
   579  090C                     	;# 
   580  090E                     	;# 
   581  090F                     	;# 
   582  091F                     	;# 
   583  098F                     	;# 
   584  098F                     	;# 
   585  0990                     	;# 
   586  0991                     	;# 
   587  0992                     	;# 
   588  0993                     	;# 
   589  0994                     	;# 
   590  0995                     	;# 
   591  0996                     	;# 
   592  0997                     	;# 
   593  0A19                     	;# 
   594  0A19                     	;# 
   595  0A1A                     	;# 
   596  0A1A                     	;# 
   597  0A1B                     	;# 
   598  0A1B                     	;# 
   599  0A1B                     	;# 
   600  0A1C                     	;# 
   601  0A1C                     	;# 
   602  0A1D                     	;# 
   603  0A1D                     	;# 
   604  0A1E                     	;# 
   605  0A1E                     	;# 
   606  0A1F                     	;# 
   607  0A1F                     	;# 
   608  0A1F                     	;# 
   609  1E0F                     	;# 
   610  1E10                     	;# 
   611  1E11                     	;# 
   612  1E12                     	;# 
   613  1E13                     	;# 
   614  1E14                     	;# 
   615  1E15                     	;# 
   616  1E16                     	;# 
   617  1E17                     	;# 
   618  1E18                     	;# 
   619  1E19                     	;# 
   620  1E1A                     	;# 
   621  1E1B                     	;# 
   622  1E1C                     	;# 
   623  1E1D                     	;# 
   624  1E1E                     	;# 
   625  1E1F                     	;# 
   626  1E20                     	;# 
   627  1E21                     	;# 
   628  1E22                     	;# 
   629  1E23                     	;# 
   630  1E24                     	;# 
   631  1E25                     	;# 
   632  1E26                     	;# 
   633  1E27                     	;# 
   634  1E28                     	;# 
   635  1E29                     	;# 
   636  1E2A                     	;# 
   637  1E2B                     	;# 
   638  1E2C                     	;# 
   639  1E2D                     	;# 
   640  1E2E                     	;# 
   641  1E2F                     	;# 
   642  1E30                     	;# 
   643  1E31                     	;# 
   644  1E32                     	;# 
   645  1E33                     	;# 
   646  1E34                     	;# 
   647  1E35                     	;# 
   648  1E36                     	;# 
   649  1E37                     	;# 
   650  1E8F                     	;# 
   651  1E90                     	;# 
   652  1E91                     	;# 
   653  1E92                     	;# 
   654  1E93                     	;# 
   655  1E9C                     	;# 
   656  1EA1                     	;# 
   657  1EA2                     	;# 
   658  1EB1                     	;# 
   659  1EBB                     	;# 
   660  1EBC                     	;# 
   661  1EBD                     	;# 
   662  1EBE                     	;# 
   663  1EC3                     	;# 
   664  1EC5                     	;# 
   665  1EC6                     	;# 
   666  1EC7                     	;# 
   667  1ECB                     	;# 
   668  1ECC                     	;# 
   669  1ECD                     	;# 
   670  1ECE                     	;# 
   671  1F10                     	;# 
   672  1F11                     	;# 
   673  1F12                     	;# 
   674  1F13                     	;# 
   675  1F14                     	;# 
   676  1F15                     	;# 
   677  1F1C                     	;# 
   678  1F1D                     	;# 
   679  1F1E                     	;# 
   680  1F1F                     	;# 
   681  1F20                     	;# 
   682  1F21                     	;# 
   683  1F22                     	;# 
   684  1F23                     	;# 
   685  1F24                     	;# 
   686  1F25                     	;# 
   687  1F26                     	;# 
   688  1F27                     	;# 
   689  1F38                     	;# 
   690  1F39                     	;# 
   691  1F3A                     	;# 
   692  1F3B                     	;# 
   693  1F3C                     	;# 
   694  1F3D                     	;# 
   695  1F3E                     	;# 
   696  1F3F                     	;# 
   697  1F43                     	;# 
   698  1F44                     	;# 
   699  1F45                     	;# 
   700  1F46                     	;# 
   701  1F47                     	;# 
   702  1F48                     	;# 
   703  1F49                     	;# 
   704  1F4A                     	;# 
   705  1F4E                     	;# 
   706  1F4F                     	;# 
   707  1F50                     	;# 
   708  1F51                     	;# 
   709  1F52                     	;# 
   710  1F53                     	;# 
   711  1F54                     	;# 
   712  1F55                     	;# 
   713  1FE4                     	;# 
   714  1FE5                     	;# 
   715  1FE6                     	;# 
   716  1FE7                     	;# 
   717  1FE8                     	;# 
   718  1FE8                     	;# 
   719  1FE9                     	;# 
   720  1FEA                     	;# 
   721  1FEA                     	;# 
   722  1FEB                     	;# 
   723  1FED                     	;# 
   724  1FEE                     	;# 
   725  1FEF                     	;# 
   726  0000                     	;# 
   727  0001                     	;# 
   728  0002                     	;# 
   729  0003                     	;# 
   730  0004                     	;# 
   731  0005                     	;# 
   732  0006                     	;# 
   733  0007                     	;# 
   734  0008                     	;# 
   735  0009                     	;# 
   736  000A                     	;# 
   737  000B                     	;# 
   738  000C                     	;# 
   739  000D                     	;# 
   740  000E                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  009B                     	;# 
   748  009B                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009E                     	;# 
   752  009F                     	;# 
   753  0119                     	;# 
   754  0119                     	;# 
   755  0119                     	;# 
   756  011A                     	;# 
   757  011A                     	;# 
   758  011A                     	;# 
   759  011B                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011B                     	;# 
   763  011B                     	;# 
   764  011C                     	;# 
   765  011C                     	;# 
   766  011C                     	;# 
   767  011D                     	;# 
   768  011D                     	;# 
   769  011D                     	;# 
   770  011E                     	;# 
   771  011E                     	;# 
   772  011E                     	;# 
   773  011F                     	;# 
   774  011F                     	;# 
   775  011F                     	;# 
   776  011F                     	;# 
   777  011F                     	;# 
   778  018C                     	;# 
   779  018D                     	;# 
   780  018E                     	;# 
   781  018F                     	;# 
   782  0190                     	;# 
   783  0191                     	;# 
   784  0192                     	;# 
   785  020C                     	;# 
   786  020C                     	;# 
   787  020D                     	;# 
   788  020E                     	;# 
   789  020F                     	;# 
   790  020F                     	;# 
   791  0210                     	;# 
   792  0210                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  028C                     	;# 
   796  028C                     	;# 
   797  028D                     	;# 
   798  028D                     	;# 
   799  028E                     	;# 
   800  028F                     	;# 
   801  0290                     	;# 
   802  0291                     	;# 
   803  030C                     	;# 
   804  030C                     	;# 
   805  030D                     	;# 
   806  030E                     	;# 
   807  030F                     	;# 
   808  0310                     	;# 
   809  0310                     	;# 
   810  0311                     	;# 
   811  0312                     	;# 
   812  0313                     	;# 
   813  0314                     	;# 
   814  0314                     	;# 
   815  0315                     	;# 
   816  0316                     	;# 
   817  0318                     	;# 
   818  0318                     	;# 
   819  0319                     	;# 
   820  031A                     	;# 
   821  031C                     	;# 
   822  031C                     	;# 
   823  031D                     	;# 
   824  031E                     	;# 
   825  038C                     	;# 
   826  038C                     	;# 
   827  038D                     	;# 
   828  038E                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  059C                     	;# 
   840  059C                     	;# 
   841  059D                     	;# 
   842  059D                     	;# 
   843  059E                     	;# 
   844  059F                     	;# 
   845  060C                     	;# 
   846  060D                     	;# 
   847  060E                     	;# 
   848  060F                     	;# 
   849  0610                     	;# 
   850  0611                     	;# 
   851  0612                     	;# 
   852  0613                     	;# 
   853  0614                     	;# 
   854  070C                     	;# 
   855  070D                     	;# 
   856  070E                     	;# 
   857  070F                     	;# 
   858  0710                     	;# 
   859  0711                     	;# 
   860  0712                     	;# 
   861  0713                     	;# 
   862  0716                     	;# 
   863  0717                     	;# 
   864  0718                     	;# 
   865  0719                     	;# 
   866  071A                     	;# 
   867  071B                     	;# 
   868  071C                     	;# 
   869  071D                     	;# 
   870  0796                     	;# 
   871  0797                     	;# 
   872  0798                     	;# 
   873  0799                     	;# 
   874  079A                     	;# 
   875  079B                     	;# 
   876  080C                     	;# 
   877  080D                     	;# 
   878  080E                     	;# 
   879  080F                     	;# 
   880  0810                     	;# 
   881  0811                     	;# 
   882  0812                     	;# 
   883  0813                     	;# 
   884  0814                     	;# 
   885  081A                     	;# 
   886  081A                     	;# 
   887  081B                     	;# 
   888  081C                     	;# 
   889  081C                     	;# 
   890  081D                     	;# 
   891  081E                     	;# 
   892  081F                     	;# 
   893  088C                     	;# 
   894  088D                     	;# 
   895  088E                     	;# 
   896  088F                     	;# 
   897  0890                     	;# 
   898  0891                     	;# 
   899  0892                     	;# 
   900  0893                     	;# 
   901  0895                     	;# 
   902  0896                     	;# 
   903  090C                     	;# 
   904  090E                     	;# 
   905  090F                     	;# 
   906  091F                     	;# 
   907  098F                     	;# 
   908  098F                     	;# 
   909  0990                     	;# 
   910  0991                     	;# 
   911  0992                     	;# 
   912  0993                     	;# 
   913  0994                     	;# 
   914  0995                     	;# 
   915  0996                     	;# 
   916  0997                     	;# 
   917  0A19                     	;# 
   918  0A19                     	;# 
   919  0A1A                     	;# 
   920  0A1A                     	;# 
   921  0A1B                     	;# 
   922  0A1B                     	;# 
   923  0A1B                     	;# 
   924  0A1C                     	;# 
   925  0A1C                     	;# 
   926  0A1D                     	;# 
   927  0A1D                     	;# 
   928  0A1E                     	;# 
   929  0A1E                     	;# 
   930  0A1F                     	;# 
   931  0A1F                     	;# 
   932  0A1F                     	;# 
   933  1E0F                     	;# 
   934  1E10                     	;# 
   935  1E11                     	;# 
   936  1E12                     	;# 
   937  1E13                     	;# 
   938  1E14                     	;# 
   939  1E15                     	;# 
   940  1E16                     	;# 
   941  1E17                     	;# 
   942  1E18                     	;# 
   943  1E19                     	;# 
   944  1E1A                     	;# 
   945  1E1B                     	;# 
   946  1E1C                     	;# 
   947  1E1D                     	;# 
   948  1E1E                     	;# 
   949  1E1F                     	;# 
   950  1E20                     	;# 
   951  1E21                     	;# 
   952  1E22                     	;# 
   953  1E23                     	;# 
   954  1E24                     	;# 
   955  1E25                     	;# 
   956  1E26                     	;# 
   957  1E27                     	;# 
   958  1E28                     	;# 
   959  1E29                     	;# 
   960  1E2A                     	;# 
   961  1E2B                     	;# 
   962  1E2C                     	;# 
   963  1E2D                     	;# 
   964  1E2E                     	;# 
   965  1E2F                     	;# 
   966  1E30                     	;# 
   967  1E31                     	;# 
   968  1E32                     	;# 
   969  1E33                     	;# 
   970  1E34                     	;# 
   971  1E35                     	;# 
   972  1E36                     	;# 
   973  1E37                     	;# 
   974  1E8F                     	;# 
   975  1E90                     	;# 
   976  1E91                     	;# 
   977  1E92                     	;# 
   978  1E93                     	;# 
   979  1E9C                     	;# 
   980  1EA1                     	;# 
   981  1EA2                     	;# 
   982  1EB1                     	;# 
   983  1EBB                     	;# 
   984  1EBC                     	;# 
   985  1EBD                     	;# 
   986  1EBE                     	;# 
   987  1EC3                     	;# 
   988  1EC5                     	;# 
   989  1EC6                     	;# 
   990  1EC7                     	;# 
   991  1ECB                     	;# 
   992  1ECC                     	;# 
   993  1ECD                     	;# 
   994  1ECE                     	;# 
   995  1F10                     	;# 
   996  1F11                     	;# 
   997  1F12                     	;# 
   998  1F13                     	;# 
   999  1F14                     	;# 
  1000  1F15                     	;# 
  1001  1F1C                     	;# 
  1002  1F1D                     	;# 
  1003  1F1E                     	;# 
  1004  1F1F                     	;# 
  1005  1F20                     	;# 
  1006  1F21                     	;# 
  1007  1F22                     	;# 
  1008  1F23                     	;# 
  1009  1F24                     	;# 
  1010  1F25                     	;# 
  1011  1F26                     	;# 
  1012  1F27                     	;# 
  1013  1F38                     	;# 
  1014  1F39                     	;# 
  1015  1F3A                     	;# 
  1016  1F3B                     	;# 
  1017  1F3C                     	;# 
  1018  1F3D                     	;# 
  1019  1F3E                     	;# 
  1020  1F3F                     	;# 
  1021  1F43                     	;# 
  1022  1F44                     	;# 
  1023  1F45                     	;# 
  1024  1F46                     	;# 
  1025  1F47                     	;# 
  1026  1F48                     	;# 
  1027  1F49                     	;# 
  1028  1F4A                     	;# 
  1029  1F4E                     	;# 
  1030  1F4F                     	;# 
  1031  1F50                     	;# 
  1032  1F51                     	;# 
  1033  1F52                     	;# 
  1034  1F53                     	;# 
  1035  1F54                     	;# 
  1036  1F55                     	;# 
  1037  1FE4                     	;# 
  1038  1FE5                     	;# 
  1039  1FE6                     	;# 
  1040  1FE7                     	;# 
  1041  1FE8                     	;# 
  1042  1FE8                     	;# 
  1043  1FE9                     	;# 
  1044  1FEA                     	;# 
  1045  1FEA                     	;# 
  1046  1FEB                     	;# 
  1047  1FED                     	;# 
  1048  1FEE                     	;# 
  1049  1FEF                     	;# 
  1050  0000                     	;# 
  1051  0001                     	;# 
  1052  0002                     	;# 
  1053  0003                     	;# 
  1054  0004                     	;# 
  1055  0005                     	;# 
  1056  0006                     	;# 
  1057  0007                     	;# 
  1058  0008                     	;# 
  1059  0009                     	;# 
  1060  000A                     	;# 
  1061  000B                     	;# 
  1062  000C                     	;# 
  1063  000D                     	;# 
  1064  000E                     	;# 
  1065  0012                     	;# 
  1066  0013                     	;# 
  1067  0014                     	;# 
  1068  0018                     	;# 
  1069  0019                     	;# 
  1070  001A                     	;# 
  1071  009B                     	;# 
  1072  009B                     	;# 
  1073  009C                     	;# 
  1074  009D                     	;# 
  1075  009E                     	;# 
  1076  009F                     	;# 
  1077  0119                     	;# 
  1078  0119                     	;# 
  1079  0119                     	;# 
  1080  011A                     	;# 
  1081  011A                     	;# 
  1082  011A                     	;# 
  1083  011B                     	;# 
  1084  011B                     	;# 
  1085  011B                     	;# 
  1086  011B                     	;# 
  1087  011B                     	;# 
  1088  011C                     	;# 
  1089  011C                     	;# 
  1090  011C                     	;# 
  1091  011D                     	;# 
  1092  011D                     	;# 
  1093  011D                     	;# 
  1094  011E                     	;# 
  1095  011E                     	;# 
  1096  011E                     	;# 
  1097  011F                     	;# 
  1098  011F                     	;# 
  1099  011F                     	;# 
  1100  011F                     	;# 
  1101  011F                     	;# 
  1102  018C                     	;# 
  1103  018D                     	;# 
  1104  018E                     	;# 
  1105  018F                     	;# 
  1106  0190                     	;# 
  1107  0191                     	;# 
  1108  0192                     	;# 
  1109  020C                     	;# 
  1110  020C                     	;# 
  1111  020D                     	;# 
  1112  020E                     	;# 
  1113  020F                     	;# 
  1114  020F                     	;# 
  1115  0210                     	;# 
  1116  0210                     	;# 
  1117  0211                     	;# 
  1118  0211                     	;# 
  1119  028C                     	;# 
  1120  028C                     	;# 
  1121  028D                     	;# 
  1122  028D                     	;# 
  1123  028E                     	;# 
  1124  028F                     	;# 
  1125  0290                     	;# 
  1126  0291                     	;# 
  1127  030C                     	;# 
  1128  030C                     	;# 
  1129  030D                     	;# 
  1130  030E                     	;# 
  1131  030F                     	;# 
  1132  0310                     	;# 
  1133  0310                     	;# 
  1134  0311                     	;# 
  1135  0312                     	;# 
  1136  0313                     	;# 
  1137  0314                     	;# 
  1138  0314                     	;# 
  1139  0315                     	;# 
  1140  0316                     	;# 
  1141  0318                     	;# 
  1142  0318                     	;# 
  1143  0319                     	;# 
  1144  031A                     	;# 
  1145  031C                     	;# 
  1146  031C                     	;# 
  1147  031D                     	;# 
  1148  031E                     	;# 
  1149  038C                     	;# 
  1150  038C                     	;# 
  1151  038D                     	;# 
  1152  038E                     	;# 
  1153  058C                     	;# 
  1154  058C                     	;# 
  1155  058D                     	;# 
  1156  058E                     	;# 
  1157  058F                     	;# 
  1158  058F                     	;# 
  1159  0590                     	;# 
  1160  0591                     	;# 
  1161  0592                     	;# 
  1162  0593                     	;# 
  1163  059C                     	;# 
  1164  059C                     	;# 
  1165  059D                     	;# 
  1166  059D                     	;# 
  1167  059E                     	;# 
  1168  059F                     	;# 
  1169  060C                     	;# 
  1170  060D                     	;# 
  1171  060E                     	;# 
  1172  060F                     	;# 
  1173  0610                     	;# 
  1174  0611                     	;# 
  1175  0612                     	;# 
  1176  0613                     	;# 
  1177  0614                     	;# 
  1178  070C                     	;# 
  1179  070D                     	;# 
  1180  070E                     	;# 
  1181  070F                     	;# 
  1182  0710                     	;# 
  1183  0711                     	;# 
  1184  0712                     	;# 
  1185  0713                     	;# 
  1186  0716                     	;# 
  1187  0717                     	;# 
  1188  0718                     	;# 
  1189  0719                     	;# 
  1190  071A                     	;# 
  1191  071B                     	;# 
  1192  071C                     	;# 
  1193  071D                     	;# 
  1194  0796                     	;# 
  1195  0797                     	;# 
  1196  0798                     	;# 
  1197  0799                     	;# 
  1198  079A                     	;# 
  1199  079B                     	;# 
  1200  080C                     	;# 
  1201  080D                     	;# 
  1202  080E                     	;# 
  1203  080F                     	;# 
  1204  0810                     	;# 
  1205  0811                     	;# 
  1206  0812                     	;# 
  1207  0813                     	;# 
  1208  0814                     	;# 
  1209  081A                     	;# 
  1210  081A                     	;# 
  1211  081B                     	;# 
  1212  081C                     	;# 
  1213  081C                     	;# 
  1214  081D                     	;# 
  1215  081E                     	;# 
  1216  081F                     	;# 
  1217  088C                     	;# 
  1218  088D                     	;# 
  1219  088E                     	;# 
  1220  088F                     	;# 
  1221  0890                     	;# 
  1222  0891                     	;# 
  1223  0892                     	;# 
  1224  0893                     	;# 
  1225  0895                     	;# 
  1226  0896                     	;# 
  1227  090C                     	;# 
  1228  090E                     	;# 
  1229  090F                     	;# 
  1230  091F                     	;# 
  1231  098F                     	;# 
  1232  098F                     	;# 
  1233  0990                     	;# 
  1234  0991                     	;# 
  1235  0992                     	;# 
  1236  0993                     	;# 
  1237  0994                     	;# 
  1238  0995                     	;# 
  1239  0996                     	;# 
  1240  0997                     	;# 
  1241  0A19                     	;# 
  1242  0A19                     	;# 
  1243  0A1A                     	;# 
  1244  0A1A                     	;# 
  1245  0A1B                     	;# 
  1246  0A1B                     	;# 
  1247  0A1B                     	;# 
  1248  0A1C                     	;# 
  1249  0A1C                     	;# 
  1250  0A1D                     	;# 
  1251  0A1D                     	;# 
  1252  0A1E                     	;# 
  1253  0A1E                     	;# 
  1254  0A1F                     	;# 
  1255  0A1F                     	;# 
  1256  0A1F                     	;# 
  1257  1E0F                     	;# 
  1258  1E10                     	;# 
  1259  1E11                     	;# 
  1260  1E12                     	;# 
  1261  1E13                     	;# 
  1262  1E14                     	;# 
  1263  1E15                     	;# 
  1264  1E16                     	;# 
  1265  1E17                     	;# 
  1266  1E18                     	;# 
  1267  1E19                     	;# 
  1268  1E1A                     	;# 
  1269  1E1B                     	;# 
  1270  1E1C                     	;# 
  1271  1E1D                     	;# 
  1272  1E1E                     	;# 
  1273  1E1F                     	;# 
  1274  1E20                     	;# 
  1275  1E21                     	;# 
  1276  1E22                     	;# 
  1277  1E23                     	;# 
  1278  1E24                     	;# 
  1279  1E25                     	;# 
  1280  1E26                     	;# 
  1281  1E27                     	;# 
  1282  1E28                     	;# 
  1283  1E29                     	;# 
  1284  1E2A                     	;# 
  1285  1E2B                     	;# 
  1286  1E2C                     	;# 
  1287  1E2D                     	;# 
  1288  1E2E                     	;# 
  1289  1E2F                     	;# 
  1290  1E30                     	;# 
  1291  1E31                     	;# 
  1292  1E32                     	;# 
  1293  1E33                     	;# 
  1294  1E34                     	;# 
  1295  1E35                     	;# 
  1296  1E36                     	;# 
  1297  1E37                     	;# 
  1298  1E8F                     	;# 
  1299  1E90                     	;# 
  1300  1E91                     	;# 
  1301  1E92                     	;# 
  1302  1E93                     	;# 
  1303  1E9C                     	;# 
  1304  1EA1                     	;# 
  1305  1EA2                     	;# 
  1306  1EB1                     	;# 
  1307  1EBB                     	;# 
  1308  1EBC                     	;# 
  1309  1EBD                     	;# 
  1310  1EBE                     	;# 
  1311  1EC3                     	;# 
  1312  1EC5                     	;# 
  1313  1EC6                     	;# 
  1314  1EC7                     	;# 
  1315  1ECB                     	;# 
  1316  1ECC                     	;# 
  1317  1ECD                     	;# 
  1318  1ECE                     	;# 
  1319  1F10                     	;# 
  1320  1F11                     	;# 
  1321  1F12                     	;# 
  1322  1F13                     	;# 
  1323  1F14                     	;# 
  1324  1F15                     	;# 
  1325  1F1C                     	;# 
  1326  1F1D                     	;# 
  1327  1F1E                     	;# 
  1328  1F1F                     	;# 
  1329  1F20                     	;# 
  1330  1F21                     	;# 
  1331  1F22                     	;# 
  1332  1F23                     	;# 
  1333  1F24                     	;# 
  1334  1F25                     	;# 
  1335  1F26                     	;# 
  1336  1F27                     	;# 
  1337  1F38                     	;# 
  1338  1F39                     	;# 
  1339  1F3A                     	;# 
  1340  1F3B                     	;# 
  1341  1F3C                     	;# 
  1342  1F3D                     	;# 
  1343  1F3E                     	;# 
  1344  1F3F                     	;# 
  1345  1F43                     	;# 
  1346  1F44                     	;# 
  1347  1F45                     	;# 
  1348  1F46                     	;# 
  1349  1F47                     	;# 
  1350  1F48                     	;# 
  1351  1F49                     	;# 
  1352  1F4A                     	;# 
  1353  1F4E                     	;# 
  1354  1F4F                     	;# 
  1355  1F50                     	;# 
  1356  1F51                     	;# 
  1357  1F52                     	;# 
  1358  1F53                     	;# 
  1359  1F54                     	;# 
  1360  1F55                     	;# 
  1361  1FE4                     	;# 
  1362  1FE5                     	;# 
  1363  1FE6                     	;# 
  1364  1FE7                     	;# 
  1365  1FE8                     	;# 
  1366  1FE8                     	;# 
  1367  1FE9                     	;# 
  1368  1FEA                     	;# 
  1369  1FEA                     	;# 
  1370  1FEB                     	;# 
  1371  1FED                     	;# 
  1372  1FEE                     	;# 
  1373  1FEF                     	;# 
  1374  0000                     	;# 
  1375  0001                     	;# 
  1376  0002                     	;# 
  1377  0003                     	;# 
  1378  0004                     	;# 
  1379  0005                     	;# 
  1380  0006                     	;# 
  1381  0007                     	;# 
  1382  0008                     	;# 
  1383  0009                     	;# 
  1384  000A                     	;# 
  1385  000B                     	;# 
  1386  000C                     	;# 
  1387  000D                     	;# 
  1388  000E                     	;# 
  1389  0012                     	;# 
  1390  0013                     	;# 
  1391  0014                     	;# 
  1392  0018                     	;# 
  1393  0019                     	;# 
  1394  001A                     	;# 
  1395  009B                     	;# 
  1396  009B                     	;# 
  1397  009C                     	;# 
  1398  009D                     	;# 
  1399  009E                     	;# 
  1400  009F                     	;# 
  1401  0119                     	;# 
  1402  0119                     	;# 
  1403  0119                     	;# 
  1404  011A                     	;# 
  1405  011A                     	;# 
  1406  011A                     	;# 
  1407  011B                     	;# 
  1408  011B                     	;# 
  1409  011B                     	;# 
  1410  011B                     	;# 
  1411  011B                     	;# 
  1412  011C                     	;# 
  1413  011C                     	;# 
  1414  011C                     	;# 
  1415  011D                     	;# 
  1416  011D                     	;# 
  1417  011D                     	;# 
  1418  011E                     	;# 
  1419  011E                     	;# 
  1420  011E                     	;# 
  1421  011F                     	;# 
  1422  011F                     	;# 
  1423  011F                     	;# 
  1424  011F                     	;# 
  1425  011F                     	;# 
  1426  018C                     	;# 
  1427  018D                     	;# 
  1428  018E                     	;# 
  1429  018F                     	;# 
  1430  0190                     	;# 
  1431  0191                     	;# 
  1432  0192                     	;# 
  1433  020C                     	;# 
  1434  020C                     	;# 
  1435  020D                     	;# 
  1436  020E                     	;# 
  1437  020F                     	;# 
  1438  020F                     	;# 
  1439  0210                     	;# 
  1440  0210                     	;# 
  1441  0211                     	;# 
  1442  0211                     	;# 
  1443  028C                     	;# 
  1444  028C                     	;# 
  1445  028D                     	;# 
  1446  028D                     	;# 
  1447  028E                     	;# 
  1448  028F                     	;# 
  1449  0290                     	;# 
  1450  0291                     	;# 
  1451  030C                     	;# 
  1452  030C                     	;# 
  1453  030D                     	;# 
  1454  030E                     	;# 
  1455  030F                     	;# 
  1456  0310                     	;# 
  1457  0310                     	;# 
  1458  0311                     	;# 
  1459  0312                     	;# 
  1460  0313                     	;# 
  1461  0314                     	;# 
  1462  0314                     	;# 
  1463  0315                     	;# 
  1464  0316                     	;# 
  1465  0318                     	;# 
  1466  0318                     	;# 
  1467  0319                     	;# 
  1468  031A                     	;# 
  1469  031C                     	;# 
  1470  031C                     	;# 
  1471  031D                     	;# 
  1472  031E                     	;# 
  1473  038C                     	;# 
  1474  038C                     	;# 
  1475  038D                     	;# 
  1476  038E                     	;# 
  1477  058C                     	;# 
  1478  058C                     	;# 
  1479  058D                     	;# 
  1480  058E                     	;# 
  1481  058F                     	;# 
  1482  058F                     	;# 
  1483  0590                     	;# 
  1484  0591                     	;# 
  1485  0592                     	;# 
  1486  0593                     	;# 
  1487  059C                     	;# 
  1488  059C                     	;# 
  1489  059D                     	;# 
  1490  059D                     	;# 
  1491  059E                     	;# 
  1492  059F                     	;# 
  1493  060C                     	;# 
  1494  060D                     	;# 
  1495  060E                     	;# 
  1496  060F                     	;# 
  1497  0610                     	;# 
  1498  0611                     	;# 
  1499  0612                     	;# 
  1500  0613                     	;# 
  1501  0614                     	;# 
  1502  070C                     	;# 
  1503  070D                     	;# 
  1504  070E                     	;# 
  1505  070F                     	;# 
  1506  0710                     	;# 
  1507  0711                     	;# 
  1508  0712                     	;# 
  1509  0713                     	;# 
  1510  0716                     	;# 
  1511  0717                     	;# 
  1512  0718                     	;# 
  1513  0719                     	;# 
  1514  071A                     	;# 
  1515  071B                     	;# 
  1516  071C                     	;# 
  1517  071D                     	;# 
  1518  0796                     	;# 
  1519  0797                     	;# 
  1520  0798                     	;# 
  1521  0799                     	;# 
  1522  079A                     	;# 
  1523  079B                     	;# 
  1524  080C                     	;# 
  1525  080D                     	;# 
  1526  080E                     	;# 
  1527  080F                     	;# 
  1528  0810                     	;# 
  1529  0811                     	;# 
  1530  0812                     	;# 
  1531  0813                     	;# 
  1532  0814                     	;# 
  1533  081A                     	;# 
  1534  081A                     	;# 
  1535  081B                     	;# 
  1536  081C                     	;# 
  1537  081C                     	;# 
  1538  081D                     	;# 
  1539  081E                     	;# 
  1540  081F                     	;# 
  1541  088C                     	;# 
  1542  088D                     	;# 
  1543  088E                     	;# 
  1544  088F                     	;# 
  1545  0890                     	;# 
  1546  0891                     	;# 
  1547  0892                     	;# 
  1548  0893                     	;# 
  1549  0895                     	;# 
  1550  0896                     	;# 
  1551  090C                     	;# 
  1552  090E                     	;# 
  1553  090F                     	;# 
  1554  091F                     	;# 
  1555  098F                     	;# 
  1556  098F                     	;# 
  1557  0990                     	;# 
  1558  0991                     	;# 
  1559  0992                     	;# 
  1560  0993                     	;# 
  1561  0994                     	;# 
  1562  0995                     	;# 
  1563  0996                     	;# 
  1564  0997                     	;# 
  1565  0A19                     	;# 
  1566  0A19                     	;# 
  1567  0A1A                     	;# 
  1568  0A1A                     	;# 
  1569  0A1B                     	;# 
  1570  0A1B                     	;# 
  1571  0A1B                     	;# 
  1572  0A1C                     	;# 
  1573  0A1C                     	;# 
  1574  0A1D                     	;# 
  1575  0A1D                     	;# 
  1576  0A1E                     	;# 
  1577  0A1E                     	;# 
  1578  0A1F                     	;# 
  1579  0A1F                     	;# 
  1580  0A1F                     	;# 
  1581  1E0F                     	;# 
  1582  1E10                     	;# 
  1583  1E11                     	;# 
  1584  1E12                     	;# 
  1585  1E13                     	;# 
  1586  1E14                     	;# 
  1587  1E15                     	;# 
  1588  1E16                     	;# 
  1589  1E17                     	;# 
  1590  1E18                     	;# 
  1591  1E19                     	;# 
  1592  1E1A                     	;# 
  1593  1E1B                     	;# 
  1594  1E1C                     	;# 
  1595  1E1D                     	;# 
  1596  1E1E                     	;# 
  1597  1E1F                     	;# 
  1598  1E20                     	;# 
  1599  1E21                     	;# 
  1600  1E22                     	;# 
  1601  1E23                     	;# 
  1602  1E24                     	;# 
  1603  1E25                     	;# 
  1604  1E26                     	;# 
  1605  1E27                     	;# 
  1606  1E28                     	;# 
  1607  1E29                     	;# 
  1608  1E2A                     	;# 
  1609  1E2B                     	;# 
  1610  1E2C                     	;# 
  1611  1E2D                     	;# 
  1612  1E2E                     	;# 
  1613  1E2F                     	;# 
  1614  1E30                     	;# 
  1615  1E31                     	;# 
  1616  1E32                     	;# 
  1617  1E33                     	;# 
  1618  1E34                     	;# 
  1619  1E35                     	;# 
  1620  1E36                     	;# 
  1621  1E37                     	;# 
  1622  1E8F                     	;# 
  1623  1E90                     	;# 
  1624  1E91                     	;# 
  1625  1E92                     	;# 
  1626  1E93                     	;# 
  1627  1E9C                     	;# 
  1628  1EA1                     	;# 
  1629  1EA2                     	;# 
  1630  1EB1                     	;# 
  1631  1EBB                     	;# 
  1632  1EBC                     	;# 
  1633  1EBD                     	;# 
  1634  1EBE                     	;# 
  1635  1EC3                     	;# 
  1636  1EC5                     	;# 
  1637  1EC6                     	;# 
  1638  1EC7                     	;# 
  1639  1ECB                     	;# 
  1640  1ECC                     	;# 
  1641  1ECD                     	;# 
  1642  1ECE                     	;# 
  1643  1F10                     	;# 
  1644  1F11                     	;# 
  1645  1F12                     	;# 
  1646  1F13                     	;# 
  1647  1F14                     	;# 
  1648  1F15                     	;# 
  1649  1F1C                     	;# 
  1650  1F1D                     	;# 
  1651  1F1E                     	;# 
  1652  1F1F                     	;# 
  1653  1F20                     	;# 
  1654  1F21                     	;# 
  1655  1F22                     	;# 
  1656  1F23                     	;# 
  1657  1F24                     	;# 
  1658  1F25                     	;# 
  1659  1F26                     	;# 
  1660  1F27                     	;# 
  1661  1F38                     	;# 
  1662  1F39                     	;# 
  1663  1F3A                     	;# 
  1664  1F3B                     	;# 
  1665  1F3C                     	;# 
  1666  1F3D                     	;# 
  1667  1F3E                     	;# 
  1668  1F3F                     	;# 
  1669  1F43                     	;# 
  1670  1F44                     	;# 
  1671  1F45                     	;# 
  1672  1F46                     	;# 
  1673  1F47                     	;# 
  1674  1F48                     	;# 
  1675  1F49                     	;# 
  1676  1F4A                     	;# 
  1677  1F4E                     	;# 
  1678  1F4F                     	;# 
  1679  1F50                     	;# 
  1680  1F51                     	;# 
  1681  1F52                     	;# 
  1682  1F53                     	;# 
  1683  1F54                     	;# 
  1684  1F55                     	;# 
  1685  1FE4                     	;# 
  1686  1FE5                     	;# 
  1687  1FE6                     	;# 
  1688  1FE7                     	;# 
  1689  1FE8                     	;# 
  1690  1FE8                     	;# 
  1691  1FE9                     	;# 
  1692  1FEA                     	;# 
  1693  1FEA                     	;# 
  1694  1FEB                     	;# 
  1695  1FED                     	;# 
  1696  1FEE                     	;# 
  1697  1FEF                     	;# 
  1698  0000                     	;# 
  1699  0001                     	;# 
  1700  0002                     	;# 
  1701  0003                     	;# 
  1702  0004                     	;# 
  1703  0005                     	;# 
  1704  0006                     	;# 
  1705  0007                     	;# 
  1706  0008                     	;# 
  1707  0009                     	;# 
  1708  000A                     	;# 
  1709  000B                     	;# 
  1710  000C                     	;# 
  1711  000D                     	;# 
  1712  000E                     	;# 
  1713  0012                     	;# 
  1714  0013                     	;# 
  1715  0014                     	;# 
  1716  0018                     	;# 
  1717  0019                     	;# 
  1718  001A                     	;# 
  1719  009B                     	;# 
  1720  009B                     	;# 
  1721  009C                     	;# 
  1722  009D                     	;# 
  1723  009E                     	;# 
  1724  009F                     	;# 
  1725  0119                     	;# 
  1726  0119                     	;# 
  1727  0119                     	;# 
  1728  011A                     	;# 
  1729  011A                     	;# 
  1730  011A                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011C                     	;# 
  1737  011C                     	;# 
  1738  011C                     	;# 
  1739  011D                     	;# 
  1740  011D                     	;# 
  1741  011D                     	;# 
  1742  011E                     	;# 
  1743  011E                     	;# 
  1744  011E                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  018C                     	;# 
  1751  018D                     	;# 
  1752  018E                     	;# 
  1753  018F                     	;# 
  1754  0190                     	;# 
  1755  0191                     	;# 
  1756  0192                     	;# 
  1757  020C                     	;# 
  1758  020C                     	;# 
  1759  020D                     	;# 
  1760  020E                     	;# 
  1761  020F                     	;# 
  1762  020F                     	;# 
  1763  0210                     	;# 
  1764  0210                     	;# 
  1765  0211                     	;# 
  1766  0211                     	;# 
  1767  028C                     	;# 
  1768  028C                     	;# 
  1769  028D                     	;# 
  1770  028D                     	;# 
  1771  028E                     	;# 
  1772  028F                     	;# 
  1773  0290                     	;# 
  1774  0291                     	;# 
  1775  030C                     	;# 
  1776  030C                     	;# 
  1777  030D                     	;# 
  1778  030E                     	;# 
  1779  030F                     	;# 
  1780  0310                     	;# 
  1781  0310                     	;# 
  1782  0311                     	;# 
  1783  0312                     	;# 
  1784  0313                     	;# 
  1785  0314                     	;# 
  1786  0314                     	;# 
  1787  0315                     	;# 
  1788  0316                     	;# 
  1789  0318                     	;# 
  1790  0318                     	;# 
  1791  0319                     	;# 
  1792  031A                     	;# 
  1793  031C                     	;# 
  1794  031C                     	;# 
  1795  031D                     	;# 
  1796  031E                     	;# 
  1797  038C                     	;# 
  1798  038C                     	;# 
  1799  038D                     	;# 
  1800  038E                     	;# 
  1801  058C                     	;# 
  1802  058C                     	;# 
  1803  058D                     	;# 
  1804  058E                     	;# 
  1805  058F                     	;# 
  1806  058F                     	;# 
  1807  0590                     	;# 
  1808  0591                     	;# 
  1809  0592                     	;# 
  1810  0593                     	;# 
  1811  059C                     	;# 
  1812  059C                     	;# 
  1813  059D                     	;# 
  1814  059D                     	;# 
  1815  059E                     	;# 
  1816  059F                     	;# 
  1817  060C                     	;# 
  1818  060D                     	;# 
  1819  060E                     	;# 
  1820  060F                     	;# 
  1821  0610                     	;# 
  1822  0611                     	;# 
  1823  0612                     	;# 
  1824  0613                     	;# 
  1825  0614                     	;# 
  1826  070C                     	;# 
  1827  070D                     	;# 
  1828  070E                     	;# 
  1829  070F                     	;# 
  1830  0710                     	;# 
  1831  0711                     	;# 
  1832  0712                     	;# 
  1833  0713                     	;# 
  1834  0716                     	;# 
  1835  0717                     	;# 
  1836  0718                     	;# 
  1837  0719                     	;# 
  1838  071A                     	;# 
  1839  071B                     	;# 
  1840  071C                     	;# 
  1841  071D                     	;# 
  1842  0796                     	;# 
  1843  0797                     	;# 
  1844  0798                     	;# 
  1845  0799                     	;# 
  1846  079A                     	;# 
  1847  079B                     	;# 
  1848  080C                     	;# 
  1849  080D                     	;# 
  1850  080E                     	;# 
  1851  080F                     	;# 
  1852  0810                     	;# 
  1853  0811                     	;# 
  1854  0812                     	;# 
  1855  0813                     	;# 
  1856  0814                     	;# 
  1857  081A                     	;# 
  1858  081A                     	;# 
  1859  081B                     	;# 
  1860  081C                     	;# 
  1861  081C                     	;# 
  1862  081D                     	;# 
  1863  081E                     	;# 
  1864  081F                     	;# 
  1865  088C                     	;# 
  1866  088D                     	;# 
  1867  088E                     	;# 
  1868  088F                     	;# 
  1869  0890                     	;# 
  1870  0891                     	;# 
  1871  0892                     	;# 
  1872  0893                     	;# 
  1873  0895                     	;# 
  1874  0896                     	;# 
  1875  090C                     	;# 
  1876  090E                     	;# 
  1877  090F                     	;# 
  1878  091F                     	;# 
  1879  098F                     	;# 
  1880  098F                     	;# 
  1881  0990                     	;# 
  1882  0991                     	;# 
  1883  0992                     	;# 
  1884  0993                     	;# 
  1885  0994                     	;# 
  1886  0995                     	;# 
  1887  0996                     	;# 
  1888  0997                     	;# 
  1889  0A19                     	;# 
  1890  0A19                     	;# 
  1891  0A1A                     	;# 
  1892  0A1A                     	;# 
  1893  0A1B                     	;# 
  1894  0A1B                     	;# 
  1895  0A1B                     	;# 
  1896  0A1C                     	;# 
  1897  0A1C                     	;# 
  1898  0A1D                     	;# 
  1899  0A1D                     	;# 
  1900  0A1E                     	;# 
  1901  0A1E                     	;# 
  1902  0A1F                     	;# 
  1903  0A1F                     	;# 
  1904  0A1F                     	;# 
  1905  1E0F                     	;# 
  1906  1E10                     	;# 
  1907  1E11                     	;# 
  1908  1E12                     	;# 
  1909  1E13                     	;# 
  1910  1E14                     	;# 
  1911  1E15                     	;# 
  1912  1E16                     	;# 
  1913  1E17                     	;# 
  1914  1E18                     	;# 
  1915  1E19                     	;# 
  1916  1E1A                     	;# 
  1917  1E1B                     	;# 
  1918  1E1C                     	;# 
  1919  1E1D                     	;# 
  1920  1E1E                     	;# 
  1921  1E1F                     	;# 
  1922  1E20                     	;# 
  1923  1E21                     	;# 
  1924  1E22                     	;# 
  1925  1E23                     	;# 
  1926  1E24                     	;# 
  1927  1E25                     	;# 
  1928  1E26                     	;# 
  1929  1E27                     	;# 
  1930  1E28                     	;# 
  1931  1E29                     	;# 
  1932  1E2A                     	;# 
  1933  1E2B                     	;# 
  1934  1E2C                     	;# 
  1935  1E2D                     	;# 
  1936  1E2E                     	;# 
  1937  1E2F                     	;# 
  1938  1E30                     	;# 
  1939  1E31                     	;# 
  1940  1E32                     	;# 
  1941  1E33                     	;# 
  1942  1E34                     	;# 
  1943  1E35                     	;# 
  1944  1E36                     	;# 
  1945  1E37                     	;# 
  1946  1E8F                     	;# 
  1947  1E90                     	;# 
  1948  1E91                     	;# 
  1949  1E92                     	;# 
  1950  1E93                     	;# 
  1951  1E9C                     	;# 
  1952  1EA1                     	;# 
  1953  1EA2                     	;# 
  1954  1EB1                     	;# 
  1955  1EBB                     	;# 
  1956  1EBC                     	;# 
  1957  1EBD                     	;# 
  1958  1EBE                     	;# 
  1959  1EC3                     	;# 
  1960  1EC5                     	;# 
  1961  1EC6                     	;# 
  1962  1EC7                     	;# 
  1963  1ECB                     	;# 
  1964  1ECC                     	;# 
  1965  1ECD                     	;# 
  1966  1ECE                     	;# 
  1967  1F10                     	;# 
  1968  1F11                     	;# 
  1969  1F12                     	;# 
  1970  1F13                     	;# 
  1971  1F14                     	;# 
  1972  1F15                     	;# 
  1973  1F1C                     	;# 
  1974  1F1D                     	;# 
  1975  1F1E                     	;# 
  1976  1F1F                     	;# 
  1977  1F20                     	;# 
  1978  1F21                     	;# 
  1979  1F22                     	;# 
  1980  1F23                     	;# 
  1981  1F24                     	;# 
  1982  1F25                     	;# 
  1983  1F26                     	;# 
  1984  1F27                     	;# 
  1985  1F38                     	;# 
  1986  1F39                     	;# 
  1987  1F3A                     	;# 
  1988  1F3B                     	;# 
  1989  1F3C                     	;# 
  1990  1F3D                     	;# 
  1991  1F3E                     	;# 
  1992  1F3F                     	;# 
  1993  1F43                     	;# 
  1994  1F44                     	;# 
  1995  1F45                     	;# 
  1996  1F46                     	;# 
  1997  1F47                     	;# 
  1998  1F48                     	;# 
  1999  1F49                     	;# 
  2000  1F4A                     	;# 
  2001  1F4E                     	;# 
  2002  1F4F                     	;# 
  2003  1F50                     	;# 
  2004  1F51                     	;# 
  2005  1F52                     	;# 
  2006  1F53                     	;# 
  2007  1F54                     	;# 
  2008  1F55                     	;# 
  2009  1FE4                     	;# 
  2010  1FE5                     	;# 
  2011  1FE6                     	;# 
  2012  1FE7                     	;# 
  2013  1FE8                     	;# 
  2014  1FE8                     	;# 
  2015  1FE9                     	;# 
  2016  1FEA                     	;# 
  2017  1FEA                     	;# 
  2018  1FEB                     	;# 
  2019  1FED                     	;# 
  2020  1FEE                     	;# 
  2021  1FEF                     	;# 
  2022  0000                     	;# 
  2023  0001                     	;# 
  2024  0002                     	;# 
  2025  0003                     	;# 
  2026  0004                     	;# 
  2027  0005                     	;# 
  2028  0006                     	;# 
  2029  0007                     	;# 
  2030  0008                     	;# 
  2031  0009                     	;# 
  2032  000A                     	;# 
  2033  000B                     	;# 
  2034  000C                     	;# 
  2035  000D                     	;# 
  2036  000E                     	;# 
  2037  0012                     	;# 
  2038  0013                     	;# 
  2039  0014                     	;# 
  2040  0018                     	;# 
  2041  0019                     	;# 
  2042  001A                     	;# 
  2043  009B                     	;# 
  2044  009B                     	;# 
  2045  009C                     	;# 
  2046  009D                     	;# 
  2047  009E                     	;# 
  2048  009F                     	;# 
  2049  0119                     	;# 
  2050  0119                     	;# 
  2051  0119                     	;# 
  2052  011A                     	;# 
  2053  011A                     	;# 
  2054  011A                     	;# 
  2055  011B                     	;# 
  2056  011B                     	;# 
  2057  011B                     	;# 
  2058  011B                     	;# 
  2059  011B                     	;# 
  2060  011C                     	;# 
  2061  011C                     	;# 
  2062  011C                     	;# 
  2063  011D                     	;# 
  2064  011D                     	;# 
  2065  011D                     	;# 
  2066  011E                     	;# 
  2067  011E                     	;# 
  2068  011E                     	;# 
  2069  011F                     	;# 
  2070  011F                     	;# 
  2071  011F                     	;# 
  2072  011F                     	;# 
  2073  011F                     	;# 
  2074  018C                     	;# 
  2075  018D                     	;# 
  2076  018E                     	;# 
  2077  018F                     	;# 
  2078  0190                     	;# 
  2079  0191                     	;# 
  2080  0192                     	;# 
  2081  020C                     	;# 
  2082  020C                     	;# 
  2083  020D                     	;# 
  2084  020E                     	;# 
  2085  020F                     	;# 
  2086  020F                     	;# 
  2087  0210                     	;# 
  2088  0210                     	;# 
  2089  0211                     	;# 
  2090  0211                     	;# 
  2091  028C                     	;# 
  2092  028C                     	;# 
  2093  028D                     	;# 
  2094  028D                     	;# 
  2095  028E                     	;# 
  2096  028F                     	;# 
  2097  0290                     	;# 
  2098  0291                     	;# 
  2099  030C                     	;# 
  2100  030C                     	;# 
  2101  030D                     	;# 
  2102  030E                     	;# 
  2103  030F                     	;# 
  2104  0310                     	;# 
  2105  0310                     	;# 
  2106  0311                     	;# 
  2107  0312                     	;# 
  2108  0313                     	;# 
  2109  0314                     	;# 
  2110  0314                     	;# 
  2111  0315                     	;# 
  2112  0316                     	;# 
  2113  0318                     	;# 
  2114  0318                     	;# 
  2115  0319                     	;# 
  2116  031A                     	;# 
  2117  031C                     	;# 
  2118  031C                     	;# 
  2119  031D                     	;# 
  2120  031E                     	;# 
  2121  038C                     	;# 
  2122  038C                     	;# 
  2123  038D                     	;# 
  2124  038E                     	;# 
  2125  058C                     	;# 
  2126  058C                     	;# 
  2127  058D                     	;# 
  2128  058E                     	;# 
  2129  058F                     	;# 
  2130  058F                     	;# 
  2131  0590                     	;# 
  2132  0591                     	;# 
  2133  0592                     	;# 
  2134  0593                     	;# 
  2135  059C                     	;# 
  2136  059C                     	;# 
  2137  059D                     	;# 
  2138  059D                     	;# 
  2139  059E                     	;# 
  2140  059F                     	;# 
  2141  060C                     	;# 
  2142  060D                     	;# 
  2143  060E                     	;# 
  2144  060F                     	;# 
  2145  0610                     	;# 
  2146  0611                     	;# 
  2147  0612                     	;# 
  2148  0613                     	;# 
  2149  0614                     	;# 
  2150  070C                     	;# 
  2151  070D                     	;# 
  2152  070E                     	;# 
  2153  070F                     	;# 
  2154  0710                     	;# 
  2155  0711                     	;# 
  2156  0712                     	;# 
  2157  0713                     	;# 
  2158  0716                     	;# 
  2159  0717                     	;# 
  2160  0718                     	;# 
  2161  0719                     	;# 
  2162  071A                     	;# 
  2163  071B                     	;# 
  2164  071C                     	;# 
  2165  071D                     	;# 
  2166  0796                     	;# 
  2167  0797                     	;# 
  2168  0798                     	;# 
  2169  0799                     	;# 
  2170  079A                     	;# 
  2171  079B                     	;# 
  2172  080C                     	;# 
  2173  080D                     	;# 
  2174  080E                     	;# 
  2175  080F                     	;# 
  2176  0810                     	;# 
  2177  0811                     	;# 
  2178  0812                     	;# 
  2179  0813                     	;# 
  2180  0814                     	;# 
  2181  081A                     	;# 
  2182  081A                     	;# 
  2183  081B                     	;# 
  2184  081C                     	;# 
  2185  081C                     	;# 
  2186  081D                     	;# 
  2187  081E                     	;# 
  2188  081F                     	;# 
  2189  088C                     	;# 
  2190  088D                     	;# 
  2191  088E                     	;# 
  2192  088F                     	;# 
  2193  0890                     	;# 
  2194  0891                     	;# 
  2195  0892                     	;# 
  2196  0893                     	;# 
  2197  0895                     	;# 
  2198  0896                     	;# 
  2199  090C                     	;# 
  2200  090E                     	;# 
  2201  090F                     	;# 
  2202  091F                     	;# 
  2203  098F                     	;# 
  2204  098F                     	;# 
  2205  0990                     	;# 
  2206  0991                     	;# 
  2207  0992                     	;# 
  2208  0993                     	;# 
  2209  0994                     	;# 
  2210  0995                     	;# 
  2211  0996                     	;# 
  2212  0997                     	;# 
  2213  0A19                     	;# 
  2214  0A19                     	;# 
  2215  0A1A                     	;# 
  2216  0A1A                     	;# 
  2217  0A1B                     	;# 
  2218  0A1B                     	;# 
  2219  0A1B                     	;# 
  2220  0A1C                     	;# 
  2221  0A1C                     	;# 
  2222  0A1D                     	;# 
  2223  0A1D                     	;# 
  2224  0A1E                     	;# 
  2225  0A1E                     	;# 
  2226  0A1F                     	;# 
  2227  0A1F                     	;# 
  2228  0A1F                     	;# 
  2229  1E0F                     	;# 
  2230  1E10                     	;# 
  2231  1E11                     	;# 
  2232  1E12                     	;# 
  2233  1E13                     	;# 
  2234  1E14                     	;# 
  2235  1E15                     	;# 
  2236  1E16                     	;# 
  2237  1E17                     	;# 
  2238  1E18                     	;# 
  2239  1E19                     	;# 
  2240  1E1A                     	;# 
  2241  1E1B                     	;# 
  2242  1E1C                     	;# 
  2243  1E1D                     	;# 
  2244  1E1E                     	;# 
  2245  1E1F                     	;# 
  2246  1E20                     	;# 
  2247  1E21                     	;# 
  2248  1E22                     	;# 
  2249  1E23                     	;# 
  2250  1E24                     	;# 
  2251  1E25                     	;# 
  2252  1E26                     	;# 
  2253  1E27                     	;# 
  2254  1E28                     	;# 
  2255  1E29                     	;# 
  2256  1E2A                     	;# 
  2257  1E2B                     	;# 
  2258  1E2C                     	;# 
  2259  1E2D                     	;# 
  2260  1E2E                     	;# 
  2261  1E2F                     	;# 
  2262  1E30                     	;# 
  2263  1E31                     	;# 
  2264  1E32                     	;# 
  2265  1E33                     	;# 
  2266  1E34                     	;# 
  2267  1E35                     	;# 
  2268  1E36                     	;# 
  2269  1E37                     	;# 
  2270  1E8F                     	;# 
  2271  1E90                     	;# 
  2272  1E91                     	;# 
  2273  1E92                     	;# 
  2274  1E93                     	;# 
  2275  1E9C                     	;# 
  2276  1EA1                     	;# 
  2277  1EA2                     	;# 
  2278  1EB1                     	;# 
  2279  1EBB                     	;# 
  2280  1EBC                     	;# 
  2281  1EBD                     	;# 
  2282  1EBE                     	;# 
  2283  1EC3                     	;# 
  2284  1EC5                     	;# 
  2285  1EC6                     	;# 
  2286  1EC7                     	;# 
  2287  1ECB                     	;# 
  2288  1ECC                     	;# 
  2289  1ECD                     	;# 
  2290  1ECE                     	;# 
  2291  1F10                     	;# 
  2292  1F11                     	;# 
  2293  1F12                     	;# 
  2294  1F13                     	;# 
  2295  1F14                     	;# 
  2296  1F15                     	;# 
  2297  1F1C                     	;# 
  2298  1F1D                     	;# 
  2299  1F1E                     	;# 
  2300  1F1F                     	;# 
  2301  1F20                     	;# 
  2302  1F21                     	;# 
  2303  1F22                     	;# 
  2304  1F23                     	;# 
  2305  1F24                     	;# 
  2306  1F25                     	;# 
  2307  1F26                     	;# 
  2308  1F27                     	;# 
  2309  1F38                     	;# 
  2310  1F39                     	;# 
  2311  1F3A                     	;# 
  2312  1F3B                     	;# 
  2313  1F3C                     	;# 
  2314  1F3D                     	;# 
  2315  1F3E                     	;# 
  2316  1F3F                     	;# 
  2317  1F43                     	;# 
  2318  1F44                     	;# 
  2319  1F45                     	;# 
  2320  1F46                     	;# 
  2321  1F47                     	;# 
  2322  1F48                     	;# 
  2323  1F49                     	;# 
  2324  1F4A                     	;# 
  2325  1F4E                     	;# 
  2326  1F4F                     	;# 
  2327  1F50                     	;# 
  2328  1F51                     	;# 
  2329  1F52                     	;# 
  2330  1F53                     	;# 
  2331  1F54                     	;# 
  2332  1F55                     	;# 
  2333  1FE4                     	;# 
  2334  1FE5                     	;# 
  2335  1FE6                     	;# 
  2336  1FE7                     	;# 
  2337  1FE8                     	;# 
  2338  1FE8                     	;# 
  2339  1FE9                     	;# 
  2340  1FEA                     	;# 
  2341  1FEA                     	;# 
  2342  1FEB                     	;# 
  2343  1FED                     	;# 
  2344  1FEE                     	;# 
  2345  1FEF                     	;# 
  2346                           
  2347                           	psect	nvBANK0
  2348  004A                     __pnvBANK0:
  2349  004A                     _EUSART1_ErrorHandler:
  2350  004A                     	ds	2
  2351  004C                     _EUSART1_OverrunErrorHandler:
  2352  004C                     	ds	2
  2353  004E                     _EUSART1_FramingErrorHandler:
  2354  004E                     	ds	2
  2355  0050                     _EUSART1_RxDefaultInterruptHandler:
  2356  0050                     	ds	2
  2357  0052                     _TMR0_InterruptHandler:
  2358  0052                     	ds	2
  2359  0018                     _LATAbits	set	24
  2360  0014                     _TRISC	set	20
  2361  0013                     _TRISB	set	19
  2362  0012                     _TRISA	set	18
  2363  001A                     _LATC	set	26
  2364  0019                     _LATB	set	25
  2365  0018                     _LATA	set	24
  2366  000B                     _INTCONbits	set	11
  2367  005F                     _GIE	set	95
  2368  0119                     _RC1REG	set	281
  2369  011D                     _RC1STAbits	set	285
  2370  011A                     _TX1REG	set	282
  2371  011C                     _SP1BRGH	set	284
  2372  011B                     _SP1BRGL	set	283
  2373  011E                     _TX1STA	set	286
  2374  011D                     _RC1STA	set	285
  2375  011F                     _BAUD1CON	set	287
  2376  059E                     _T0CON0	set	1438
  2377  059C                     _TMR0L	set	1436
  2378  059D                     _TMR0H	set	1437
  2379  059F                     _T0CON1	set	1439
  2380  070F                     _PIR3bits	set	1807
  2381  0719                     _PIE3bits	set	1817
  2382  0716                     _PIE0bits	set	1814
  2383  070C                     _PIR0bits	set	1804
  2384  079B                     _PMD5	set	1947
  2385  079A                     _PMD4	set	1946
  2386  0799                     _PMD3	set	1945
  2387  0798                     _PMD2	set	1944
  2388  0797                     _PMD1	set	1943
  2389  0796                     _PMD0	set	1942
  2390  081F                     _NVMCON2	set	2079
  2391  081C                     _NVMDATL	set	2076
  2392  081D                     _NVMDATH	set	2077
  2393  081E                     _NVMCON1bits	set	2078
  2394  081B                     _NVMADRH	set	2075
  2395  081A                     _NVMADRL	set	2074
  2396  0892                     _OSCTUNE	set	2194
  2397  0890                     _OSCSTAT	set	2192
  2398  0893                     _OSCFRQ	set	2195
  2399  0891                     _OSCEN	set	2193
  2400  088F                     _OSCCON3	set	2191
  2401  088D                     _OSCCON1	set	2189
  2402  1ECB                     _RX1DTPPS	set	7883
  2403  1E8F                     _PPSLOCK	set	7823
  2404  1F20                     _RC0PPS	set	7968
  2405  1F52                     _INLVLC	set	8018
  2406  1F47                     _INLVLB	set	8007
  2407  1F3C                     _INLVLA	set	7996
  2408  1F51                     _SLRCONC	set	8017
  2409  1F46                     _SLRCONB	set	8006
  2410  1F3B                     _SLRCONA	set	7995
  2411  1F50                     _ODCONC	set	8016
  2412  1F45                     _ODCONB	set	8005
  2413  1F3A                     _ODCONA	set	7994
  2414  1F4F                     _WPUC	set	8015
  2415  1F39                     _WPUA	set	7993
  2416  1F44                     _WPUB	set	8004
  2417  1F38                     _ANSELA	set	7992
  2418  1F43                     _ANSELB	set	8003
  2419  1F4E                     _ANSELC	set	8014
  2420                           
  2421                           	psect	cinit
  2422  001D                     start_initialization:	
  2423                           ; #config settings
  2424                           
  2425  001D                     __initialization:
  2426                           
  2427                           ; Clear objects allocated to COMMON
  2428  001D  01F6               	clrf	__pbssCOMMON& (0+127)
  2429  001E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2430  001F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2431  0020  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2432                           
  2433                           ; Clear objects allocated to BANK0
  2434  0021  303E               	movlw	low __pbssBANK0
  2435  0022  0084               	movwf	4
  2436  0023  3000               	movlw	high __pbssBANK0
  2437  0024  0085               	movwf	5
  2438  0025  300C               	movlw	12
  2439  0026  3183  2313  3180   	fcall	clear_ram0
  2440                           
  2441                           ; Clear objects allocated to BANK1
  2442  0029  30A0               	movlw	low __pbssBANK1
  2443  002A  0084               	movwf	4
  2444  002B  3000               	movlw	high __pbssBANK1
  2445  002C  0085               	movwf	5
  2446  002D  3040               	movlw	64
  2447  002E  3183  2313         	fcall	clear_ram0
  2448  0030                     end_of_initialization:	
  2449                           ;End of C runtime variable initialization code
  2450                           
  2451  0030                     __end_of__initialization:
  2452  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2453  0031  0140               	movlb	0
  2454  0032  3180  2834         	ljmp	_main	;jump to C main() function
  2455                           
  2456                           	psect	bssCOMMON
  2457  0076                     __pbssCOMMON:
  2458  0076                     _eusart1RxLastError:
  2459  0076                     	ds	1
  2460  0077                     _eusart1RxCount:
  2461  0077                     	ds	1
  2462  0078                     _MBusAddr:
  2463  0078                     	ds	1
  2464  0079                     _gFlags:
  2465  0079                     	ds	1
  2466                           
  2467                           	psect	bssBANK0
  2468  003E                     __pbssBANK0:
  2469  003E                     _eusart1RxBuffer:
  2470  003E                     	ds	8
  2471  0046                     _RxTick:
  2472  0046                     	ds	2
  2473  0048                     _SystemTick:
  2474  0048                     	ds	2
  2475                           
  2476                           	psect	bssBANK1
  2477  00A0                     __pbssBANK1:
  2478  00A0                     _flashBlock:
  2479  00A0                     	ds	64
  2480                           
  2481                           	psect	clrtext
  2482  0313                     clear_ram0:	
  2483                           ;	Called with FSR0 containing the base address, and
  2484                           ;	WREG with the size to clear
  2485                           
  2486  0313  0064               	clrwdt	;clear the watchdog before getting into this loop
  2487  0314                     clrloop0:
  2488  0314  0180               	clrf	0	;clear RAM location pointed to by FSR
  2489  0315  3101               	addfsr 0,1
  2490  0316  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2491  0317  2B14               	goto	clrloop0	;have we reached the end yet?
  2492  0318  3400               	retlw	0	;all done for this memory range, return
  2493                           
  2494                           	psect	cstackCOMMON
  2495  0070                     __pcstackCOMMON:
  2496  0070                     ?_PMD_Initialize:
  2497  0070                     ?_PIN_MANAGER_Initialize:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0070                     ?_OSCILLATOR_Initialize:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0070                     ?_TMR0_Initialize:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506  0070                     ?_EUSART1_Initialize:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0070                     ?_TMR0_DefaultInterruptHandler:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0070                     ??_TMR0_DefaultInterruptHandler:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0070                     ?_TMR0_CallBack:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0070                     ??_TMR0_CallBack:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0070                     ?_EUSART1_Write:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524  0070                     ?_EUSART1_Receive_ISR:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  0070                     ?_EUSART1_DefaultErrorHandler:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  0070                     ?_EUSART1_RxDataHandler:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  0070                     ??_EUSART1_RxDataHandler:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0070                     ?_SYSTEM_Initialize:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551  0070                     ?_TMR0_ISR:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554  0070                     ??_TMR0_ISR:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557  0070                     ?_RxAnswer:	
  2558                           ; 1 bytes @ 0x0
  2559                           
  2560  0070                     ?_RxProc:	
  2561                           ; 1 bytes @ 0x0
  2562                           
  2563  0070                     ?_INTERRUPT_InterruptManager:	
  2564                           ; 1 bytes @ 0x0
  2565                           
  2566  0070                     ?_main:	
  2567                           ; 1 bytes @ 0x0
  2568                           
  2569                           
  2570                           ; 1 bytes @ 0x0
  2571  0070                     	ds	1
  2572  0071                     EUSART1_RxDataHandler@rx:
  2573                           
  2574                           ; 1 bytes @ 0x1
  2575  0071                     	ds	1
  2576  0072                     EUSART1_RxDataHandler@sum:
  2577                           
  2578                           ; 1 bytes @ 0x2
  2579  0072                     	ds	1
  2580  0073                     EUSART1_RxDataHandler@i:
  2581                           
  2582                           ; 1 bytes @ 0x3
  2583  0073                     	ds	1
  2584  0074                     ?_FLASH_EraseBlock:
  2585  0074                     ??_PMD_Initialize:	
  2586                           ; 1 bytes @ 0x4
  2587                           
  2588  0074                     ??_PIN_MANAGER_Initialize:	
  2589                           ; 1 bytes @ 0x4
  2590                           
  2591  0074                     ??_OSCILLATOR_Initialize:	
  2592                           ; 1 bytes @ 0x4
  2593                           
  2594  0074                     ?_TMR0_SetInterruptHandler:	
  2595                           ; 1 bytes @ 0x4
  2596                           
  2597  0074                     ??_EUSART1_Write:	
  2598                           ; 1 bytes @ 0x4
  2599                           
  2600  0074                     ?_EUSART1_SetRxInterruptHandler:	
  2601                           ; 1 bytes @ 0x4
  2602                           
  2603  0074                     ??_EUSART1_Receive_ISR:	
  2604                           ; 1 bytes @ 0x4
  2605                           
  2606  0074                     ?_EUSART1_SetFramingErrorHandler:	
  2607                           ; 1 bytes @ 0x4
  2608                           
  2609  0074                     ?_EUSART1_SetOverrunErrorHandler:	
  2610                           ; 1 bytes @ 0x4
  2611                           
  2612  0074                     ?_EUSART1_SetErrorHandler:	
  2613                           ; 1 bytes @ 0x4
  2614                           
  2615  0074                     ??_EUSART1_DefaultErrorHandler:	
  2616                           ; 1 bytes @ 0x4
  2617                           
  2618  0074                     ??_INTERRUPT_InterruptManager:	
  2619                           ; 1 bytes @ 0x4
  2620                           
  2621  0074                     ?_FLASH_ReadWord:	
  2622                           ; 1 bytes @ 0x4
  2623                           
  2624  0074                     EUSART1_Write@txData:	
  2625                           ; 2 bytes @ 0x4
  2626                           
  2627  0074                     FLASH_ReadWord@flashAddr:	
  2628                           ; 1 bytes @ 0x4
  2629                           
  2630  0074                     FLASH_EraseBlock@startAddr:	
  2631                           ; 2 bytes @ 0x4
  2632                           
  2633  0074                     TMR0_SetInterruptHandler@InterruptHandler:	
  2634                           ; 2 bytes @ 0x4
  2635                           
  2636  0074                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  2637                           ; 2 bytes @ 0x4
  2638                           
  2639  0074                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  2640                           ; 2 bytes @ 0x4
  2641                           
  2642  0074                     EUSART1_SetErrorHandler@interruptHandler:	
  2643                           ; 2 bytes @ 0x4
  2644                           
  2645  0074                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  2646                           ; 2 bytes @ 0x4
  2647                           
  2648                           
  2649                           ; 2 bytes @ 0x4
  2650  0074                     	ds	1
  2651  0075                     ??_RxAnswer:
  2652                           
  2653                           ; 1 bytes @ 0x5
  2654  0075                     	ds	1
  2655  0076                     ??_FLASH_EraseBlock:
  2656  0076                     ??_TMR0_Initialize:	
  2657                           ; 1 bytes @ 0x6
  2658                           
  2659  0076                     ??_EUSART1_Initialize:	
  2660                           ; 1 bytes @ 0x6
  2661                           
  2662  0076                     ??_TMR0_SetInterruptHandler:	
  2663                           ; 1 bytes @ 0x6
  2664                           
  2665  0076                     ??_EUSART1_SetRxInterruptHandler:	
  2666                           ; 1 bytes @ 0x6
  2667                           
  2668  0076                     ??_EUSART1_SetFramingErrorHandler:	
  2669                           ; 1 bytes @ 0x6
  2670                           
  2671  0076                     ??_EUSART1_SetOverrunErrorHandler:	
  2672                           ; 1 bytes @ 0x6
  2673                           
  2674  0076                     ??_EUSART1_SetErrorHandler:	
  2675                           ; 1 bytes @ 0x6
  2676                           
  2677  0076                     ??_FLASH_ReadWord:	
  2678                           ; 1 bytes @ 0x6
  2679                           
  2680  0076                     ??_SYSTEM_Initialize:	
  2681                           ; 1 bytes @ 0x6
  2682                           
  2683                           
  2684                           	psect	cstackBANK0
  2685  0020                     __pcstackBANK0:	
  2686                           ; 1 bytes @ 0x6
  2687                           
  2688  0020                     FLASH_ReadWord@GIEBitValue:
  2689  0020                     FLASH_EraseBlock@GIEBitValue:	
  2690                           ; 1 bytes @ 0x0
  2691                           
  2692  0020                     RxAnswer@command:	
  2693                           ; 1 bytes @ 0x0
  2694                           
  2695                           
  2696                           ; 1 bytes @ 0x0
  2697  0020                     	ds	1
  2698  0021                     ?_FLASH_WriteBlock:
  2699  0021                     RxAnswer@sum:	
  2700                           ; 1 bytes @ 0x1
  2701                           
  2702  0021                     FLASH_WriteBlock@writeAddr:	
  2703                           ; 1 bytes @ 0x1
  2704                           
  2705                           
  2706                           ; 2 bytes @ 0x1
  2707  0021                     	ds	2
  2708  0023                     FLASH_WriteBlock@flashWordArray:
  2709                           
  2710                           ; 1 bytes @ 0x3
  2711  0023                     	ds	1
  2712  0024                     ??_FLASH_WriteBlock:
  2713                           
  2714                           ; 1 bytes @ 0x4
  2715  0024                     	ds	3
  2716  0027                     FLASH_WriteBlock@blockStartAddr:
  2717                           
  2718                           ; 2 bytes @ 0x7
  2719  0027                     	ds	2
  2720  0029                     FLASH_WriteBlock@GIEBitValue:
  2721                           
  2722                           ; 1 bytes @ 0x9
  2723  0029                     	ds	1
  2724  002A                     FLASH_WriteBlock@i:
  2725                           
  2726                           ; 1 bytes @ 0xA
  2727  002A                     	ds	1
  2728  002B                     ?_FLASH_WriteWord:
  2729  002B                     FLASH_WriteWord@flashAddr:	
  2730                           ; 1 bytes @ 0xB
  2731                           
  2732                           
  2733                           ; 2 bytes @ 0xB
  2734  002B                     	ds	2
  2735  002D                     FLASH_WriteWord@ramBuf:
  2736                           
  2737                           ; 1 bytes @ 0xD
  2738  002D                     	ds	1
  2739  002E                     FLASH_WriteWord@word:
  2740                           
  2741                           ; 2 bytes @ 0xE
  2742  002E                     	ds	2
  2743  0030                     ??_FLASH_WriteWord:
  2744                           
  2745                           ; 1 bytes @ 0x10
  2746  0030                     	ds	1
  2747  0031                     FLASH_WriteWord@offset:
  2748                           
  2749                           ; 1 bytes @ 0x11
  2750  0031                     	ds	1
  2751  0032                     FLASH_WriteWord@blockStartAddr:
  2752                           
  2753                           ; 2 bytes @ 0x12
  2754  0032                     	ds	2
  2755  0034                     FLASH_WriteWord@i:
  2756                           
  2757                           ; 1 bytes @ 0x14
  2758  0034                     	ds	1
  2759  0035                     ??_RxProc:
  2760                           
  2761                           ; 1 bytes @ 0x15
  2762  0035                     	ds	3
  2763  0038                     RxProc@flash:
  2764                           
  2765                           ; 2 bytes @ 0x18
  2766  0038                     	ds	2
  2767  003A                     ??_main:
  2768                           
  2769                           ; 1 bytes @ 0x1A
  2770  003A                     	ds	2
  2771  003C                     main@flash:
  2772                           
  2773                           ; 2 bytes @ 0x1C
  2774  003C                     	ds	2
  2775                           
  2776                           	psect	maintext
  2777  0034                     __pmaintext:	
  2778 ;;
  2779 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2780 ;;
  2781 ;; *************** function _main *****************
  2782 ;; Defined at:
  2783 ;;		line 51 in file "main.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  flash           2   28[BANK0 ] unsigned int 
  2788 ;;  i               1    0        unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : B3F/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2798 ;;      Params:         0       0       0       0       0       0       0       0
  2799 ;;      Locals:         0       2       0       0       0       0       0       0
  2800 ;;      Temps:          0       2       0       0       0       0       0       0
  2801 ;;      Totals:         0       4       0       0       0       0       0       0
  2802 ;;Total ram usage:        4 bytes
  2803 ;; Hardware stack levels required when called: 8
  2804 ;; This function calls:
  2805 ;;		_FLASH_ReadWord
  2806 ;;		_FLASH_WriteWord
  2807 ;;		_RxProc
  2808 ;;		_SYSTEM_Initialize
  2809 ;; This function is called by:
  2810 ;;		Startup code after reset
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _main
  2816  0034                     _main:
  2817                           
  2818                           ;main.c: 56: SYSTEM_Initialize();
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2822  0034  3182  22DF  3180   	fcall	_SYSTEM_Initialize
  2823                           
  2824                           ;main.c: 57: flash = FLASH_ReadWord(0x0fe0);
  2825  0037  30E0               	movlw	224
  2826  0038  00F4               	movwf	FLASH_ReadWord@flashAddr
  2827  0039  300F               	movlw	15
  2828  003A  00F5               	movwf	FLASH_ReadWord@flashAddr+1
  2829  003B  3182  22B1  3180   	fcall	_FLASH_ReadWord
  2830  003E  0875               	movf	?_FLASH_ReadWord+1,w
  2831  003F  0140               	movlb	0	; select bank0
  2832  0040  00BD               	movwf	main@flash+1
  2833  0041  0874               	movf	?_FLASH_ReadWord,w
  2834  0042  00BC               	movwf	main@flash
  2835                           
  2836                           ;main.c: 58: if (flash != 0x1234)
  2837  0043  3034               	movlw	52
  2838  0044  063C               	xorwf	main@flash,w
  2839  0045  3012               	movlw	18
  2840  0046  1903               	skipnz
  2841  0047  063D               	xorwf	main@flash+1,w
  2842  0048  1903               	btfsc	3,2
  2843  0049  2869               	goto	l1870
  2844                           
  2845                           ;main.c: 59: {;main.c: 60: FLASH_WriteWord(0x0fe0, flashBlock, 0x1234);
  2846  004A  30E0               	movlw	224
  2847  004B  00AB               	movwf	FLASH_WriteWord@flashAddr
  2848  004C  300F               	movlw	15
  2849  004D  00AC               	movwf	FLASH_WriteWord@flashAddr+1
  2850  004E  30A0               	movlw	(low (_flashBlock| 0))& (0+255)
  2851  004F  00BA               	movwf	??_main
  2852  0050  083A               	movf	??_main,w
  2853  0051  00AD               	movwf	FLASH_WriteWord@ramBuf
  2854  0052  3034               	movlw	52
  2855  0053  00AE               	movwf	FLASH_WriteWord@word
  2856  0054  3012               	movlw	18
  2857  0055  00AF               	movwf	FLASH_WriteWord@word+1
  2858  0056  3181  219D  3180   	fcall	_FLASH_WriteWord
  2859                           
  2860                           ;main.c: 61: FLASH_WriteWord(0x0fe0+4, flashBlock, 0x3030);
  2861  0059  30E4               	movlw	228
  2862  005A  0140               	movlb	0	; select bank0
  2863  005B  00AB               	movwf	FLASH_WriteWord@flashAddr
  2864  005C  300F               	movlw	15
  2865  005D  00AC               	movwf	FLASH_WriteWord@flashAddr+1
  2866  005E  30A0               	movlw	(low (_flashBlock| 0))& (0+255)
  2867  005F  00BA               	movwf	??_main
  2868  0060  083A               	movf	??_main,w
  2869  0061  00AD               	movwf	FLASH_WriteWord@ramBuf
  2870  0062  3030               	movlw	48
  2871  0063  00AE               	movwf	FLASH_WriteWord@word
  2872  0064  3030               	movlw	48
  2873  0065  00AF               	movwf	FLASH_WriteWord@word+1
  2874  0066  3181  219D  3180   	fcall	_FLASH_WriteWord
  2875  0069                     l1870:
  2876                           
  2877                           ;main.c: 62: };main.c: 63: flash=FLASH_ReadWord(0x0fe0 + 4);
  2878  0069  30E4               	movlw	228
  2879  006A  00F4               	movwf	FLASH_ReadWord@flashAddr
  2880  006B  300F               	movlw	15
  2881  006C  00F5               	movwf	FLASH_ReadWord@flashAddr+1
  2882  006D  3182  22B1  3180   	fcall	_FLASH_ReadWord
  2883  0070  0875               	movf	?_FLASH_ReadWord+1,w
  2884  0071  0140               	movlb	0	; select bank0
  2885  0072  00BD               	movwf	main@flash+1
  2886  0073  0874               	movf	?_FLASH_ReadWord,w
  2887  0074  00BC               	movwf	main@flash
  2888                           
  2889                           ;main.c: 64: MBusAddr = (uint8_t)((flash>>8)&0x000F);
  2890  0075  083D               	movf	main@flash+1,w
  2891  0076  390F               	andlw	15
  2892  0077  00BA               	movwf	??_main
  2893  0078  083A               	movf	??_main,w
  2894  0079  00F8               	movwf	_MBusAddr
  2895                           
  2896                           ;main.c: 65: MBusAddr=(uint8_t)(MBusAddr<<4);
  2897  007A  0878               	movf	_MBusAddr,w
  2898  007B  00BA               	movwf	??_main
  2899  007C  3003               	movlw	3
  2900  007D                     u635:
  2901  007D  35BA               	lslf	??_main,f
  2902  007E  3EFF               	addlw	-1
  2903  007F  1D03               	skipz
  2904  0080  287D               	goto	u635
  2905  0081  353A               	lslf	??_main,w
  2906  0082  00BB               	movwf	??_main+1
  2907  0083  083B               	movf	??_main+1,w
  2908  0084  00F8               	movwf	_MBusAddr
  2909                           
  2910                           ;main.c: 66: flash=flash&0x000f;
  2911  0085  300F               	movlw	15
  2912  0086  053C               	andwf	main@flash,w
  2913  0087  00BC               	movwf	main@flash
  2914  0088  3000               	movlw	0
  2915  0089  053D               	andwf	main@flash+1,w
  2916  008A  00BD               	movwf	main@flash+1
  2917                           
  2918                           ;main.c: 67: MBusAddr = (uint8_t)(MBusAddr+(uint8_t)flash);
  2919  008B  0878               	movf	_MBusAddr,w
  2920  008C  073C               	addwf	main@flash,w
  2921  008D  00BA               	movwf	??_main
  2922  008E  083A               	movf	??_main,w
  2923  008F  00F8               	movwf	_MBusAddr
  2924                           
  2925                           ;main.c: 72: (INTCONbits.GIE = 1);
  2926  0090  178B               	bsf	11,7	;volatile
  2927                           
  2928                           ;main.c: 75: (INTCONbits.PEIE = 1);
  2929  0091  170B               	bsf	11,6	;volatile
  2930  0092                     l374:	
  2931                           ;main.c: 83: while (1)
  2932                           
  2933  0092  0064               	clrwdt	;# 
  2934                           
  2935                           ;main.c: 88: if((SystemTick-RxTick)>10)
  2936  0093  0140               	movlb	0	; select bank0
  2937  0094  0846               	movf	_RxTick,w	;volatile
  2938  0095  0248               	subwf	_SystemTick,w	;volatile
  2939  0096  00BA               	movwf	??_main
  2940  0097  0847               	movf	_RxTick+1,w	;volatile
  2941  0098  3B49               	subwfb	_SystemTick+1,w	;volatile
  2942  0099  00BB               	movwf	??_main+1
  2943  009A  3000               	movlw	0
  2944  009B  023B               	subwf	??_main+1,w
  2945  009C  300B               	movlw	11
  2946  009D  1903               	skipnz
  2947  009E  023A               	subwf	??_main,w
  2948  009F  1803               	btfsc	3,0
  2949                           
  2950                           ;main.c: 89: eusart1RxCount=0;
  2951  00A0  01F7               	clrf	_eusart1RxCount	;volatile
  2952                           
  2953                           ;main.c: 90: if (gFlags.bMBusRx)
  2954  00A1  1C79               	btfss	_gFlags,0
  2955  00A2  2892               	goto	l374
  2956                           
  2957                           ;main.c: 91: {;main.c: 92: RxProc();
  2958  00A3  3181  215D  3180   	fcall	_RxProc
  2959                           
  2960                           ;main.c: 93: gFlags.bMBusRx=0;
  2961  00A6  1079               	bcf	_gFlags,0
  2962  00A7  2892               	goto	l374
  2963  00A8                     __end_of_main:
  2964                           
  2965                           	psect	text1
  2966  02DF                     __ptext1:	
  2967 ;; *************** function _SYSTEM_Initialize *****************
  2968 ;; Defined at:
  2969 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0, pclath, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2983 ;;      Params:         0       0       0       0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 6
  2990 ;; This function calls:
  2991 ;;		_EUSART1_Initialize
  2992 ;;		_OSCILLATOR_Initialize
  2993 ;;		_PIN_MANAGER_Initialize
  2994 ;;		_PMD_Initialize
  2995 ;;		_TMR0_Initialize
  2996 ;; This function is called by:
  2997 ;;		_main
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _SYSTEM_Initialize
  3003  02DF                     _SYSTEM_Initialize:
  3004                           
  3005                           ;mcc.c: 52: PMD_Initialize();
  3006                           
  3007                           ;incstack = 0
  3008                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3009  02DF  3183  2303  3182   	fcall	_PMD_Initialize
  3010                           
  3011                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  3012  02E2  3181  21DC  3182   	fcall	_PIN_MANAGER_Initialize
  3013                           
  3014                           ;mcc.c: 54: OSCILLATOR_Initialize();
  3015  02E5  3182  22F9  3182   	fcall	_OSCILLATOR_Initialize
  3016                           
  3017                           ;mcc.c: 55: TMR0_Initialize();
  3018  02E8  3182  22CC  3182   	fcall	_TMR0_Initialize
  3019                           
  3020                           ;mcc.c: 56: EUSART1_Initialize();
  3021  02EB  3182  2244         	fcall	_EUSART1_Initialize
  3022  02ED  0008               	return
  3023  02EE                     __end_of_SYSTEM_Initialize:
  3024                           
  3025                           	psect	text2
  3026  02CC                     __ptext2:	
  3027 ;; *************** function _TMR0_Initialize *****************
  3028 ;; Defined at:
  3029 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0, pclath, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3043 ;;      Params:         0       0       0       0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0
  3046 ;;      Totals:         0       0       0       0       0       0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 5
  3050 ;; This function calls:
  3051 ;;		_TMR0_SetInterruptHandler
  3052 ;; This function is called by:
  3053 ;;		_SYSTEM_Initialize
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _TMR0_Initialize
  3059  02CC                     _TMR0_Initialize:
  3060                           
  3061                           ;tmr0.c: 66: T0CON1 = 0x55;
  3062                           
  3063                           ;incstack = 0
  3064                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3065  02CC  3055               	movlw	85
  3066  02CD  014B               	movlb	11	; select bank11
  3067  02CE  009F               	movwf	31	;volatile
  3068                           
  3069                           ;tmr0.c: 69: TMR0H = 0xC2;
  3070  02CF  30C2               	movlw	194
  3071  02D0  009D               	movwf	29	;volatile
  3072                           
  3073                           ;tmr0.c: 72: TMR0L = 0x00;
  3074  02D1  019C               	clrf	28	;volatile
  3075                           
  3076                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
  3077  02D2  014E               	movlb	14	; select bank14
  3078  02D3  128C               	bcf	12,5	;volatile
  3079                           
  3080                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
  3081  02D4  1696               	bsf	22,5	;volatile
  3082                           
  3083                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  3084  02D5  3037               	movlw	low _TMR0_DefaultInterruptHandler
  3085  02D6  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3086  02D7  3003               	movlw	high _TMR0_DefaultInterruptHandler
  3087  02D8  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3088  02D9  3183  2319         	fcall	_TMR0_SetInterruptHandler
  3089                           
  3090                           ;tmr0.c: 84: T0CON0 = 0x8F;
  3091  02DB  308F               	movlw	143
  3092  02DC  014B               	movlb	11	; select bank11
  3093  02DD  009E               	movwf	30	;volatile
  3094  02DE  0008               	return
  3095  02DF                     __end_of_TMR0_Initialize:
  3096                           
  3097                           	psect	text3
  3098  0319                     __ptext3:	
  3099 ;; *************** function _TMR0_SetInterruptHandler *****************
  3100 ;; Defined at:
  3101 ;;		line 141 in file "mcc_generated_files/tmr0.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  3104 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3116 ;;      Params:         2       0       0       0       0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0
  3119 ;;      Totals:         2       0       0       0       0       0       0       0
  3120 ;;Total ram usage:        2 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 4
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_TMR0_Initialize
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           
  3131                           ;psect for function _TMR0_SetInterruptHandler
  3132  0319                     _TMR0_SetInterruptHandler:
  3133                           
  3134                           ;tmr0.c: 142: TMR0_InterruptHandler = InterruptHandler;
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3138  0319  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3139  031A  0140               	movlb	0	; select bank0
  3140  031B  00D3               	movwf	_TMR0_InterruptHandler+1
  3141  031C  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3142  031D  00D2               	movwf	_TMR0_InterruptHandler
  3143  031E  0008               	return
  3144  031F                     __end_of_TMR0_SetInterruptHandler:
  3145                           
  3146                           	psect	text4
  3147  0303                     __ptext4:	
  3148 ;; *************** function _PMD_Initialize *****************
  3149 ;; Defined at:
  3150 ;;		line 75 in file "mcc_generated_files/mcc.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		status,2
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3164 ;;      Params:         0       0       0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 4
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_SYSTEM_Initialize
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function _PMD_Initialize
  3180  0303                     _PMD_Initialize:
  3181                           
  3182                           ;mcc.c: 78: PMD0 = 0x00;
  3183                           
  3184                           ;incstack = 0
  3185                           ; Regs used in _PMD_Initialize: [status,2]
  3186  0303  014F               	movlb	15	; select bank15
  3187  0304  0196               	clrf	22	;volatile
  3188                           
  3189                           ;mcc.c: 80: PMD1 = 0x00;
  3190  0305  0197               	clrf	23	;volatile
  3191                           
  3192                           ;mcc.c: 82: PMD2 = 0x00;
  3193  0306  0198               	clrf	24	;volatile
  3194                           
  3195                           ;mcc.c: 84: PMD3 = 0x00;
  3196  0307  0199               	clrf	25	;volatile
  3197                           
  3198                           ;mcc.c: 86: PMD4 = 0x00;
  3199  0308  019A               	clrf	26	;volatile
  3200                           
  3201                           ;mcc.c: 88: PMD5 = 0x00;
  3202  0309  019B               	clrf	27	;volatile
  3203  030A  0008               	return
  3204  030B                     __end_of_PMD_Initialize:
  3205                           
  3206                           	psect	text5
  3207  01DC                     __ptext5:	
  3208 ;; *************** function _PIN_MANAGER_Initialize *****************
  3209 ;; Defined at:
  3210 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3224 ;;      Params:         0       0       0       0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0
  3227 ;;      Totals:         0       0       0       0       0       0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 4
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_SYSTEM_Initialize
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _PIN_MANAGER_Initialize
  3240  01DC                     _PIN_MANAGER_Initialize:
  3241                           
  3242                           ;pin_manager.c: 60: LATA = 0x00;
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3246  01DC  0140               	movlb	0	; select bank0
  3247  01DD  0198               	clrf	24	;volatile
  3248                           
  3249                           ;pin_manager.c: 61: LATB = 0x00;
  3250  01DE  0199               	clrf	25	;volatile
  3251                           
  3252                           ;pin_manager.c: 62: LATC = 0x90;
  3253  01DF  3090               	movlw	144
  3254  01E0  009A               	movwf	26	;volatile
  3255                           
  3256                           ;pin_manager.c: 67: TRISA = 0x3B;
  3257  01E1  303B               	movlw	59
  3258  01E2  0092               	movwf	18	;volatile
  3259                           
  3260                           ;pin_manager.c: 68: TRISB = 0xF0;
  3261  01E3  30F0               	movlw	240
  3262  01E4  0093               	movwf	19	;volatile
  3263                           
  3264                           ;pin_manager.c: 69: TRISC = 0xFE;
  3265  01E5  30FE               	movlw	254
  3266  01E6  0094               	movwf	20	;volatile
  3267                           
  3268                           ;pin_manager.c: 74: ANSELC = 0xFC;
  3269  01E7  30FC               	movlw	252
  3270  01E8  017E               	movlb	62	; select bank62
  3271  01E9  00CE               	movwf	78	;volatile
  3272                           
  3273                           ;pin_manager.c: 75: ANSELB = 0x80;
  3274  01EA  3080               	movlw	128
  3275  01EB  00C3               	movwf	67	;volatile
  3276                           
  3277                           ;pin_manager.c: 76: ANSELA = 0x33;
  3278  01EC  3033               	movlw	51
  3279  01ED  00B8               	movwf	56	;volatile
  3280                           
  3281                           ;pin_manager.c: 81: WPUB = 0x00;
  3282  01EE  01C4               	clrf	68	;volatile
  3283                           
  3284                           ;pin_manager.c: 82: WPUA = 0x00;
  3285  01EF  01B9               	clrf	57	;volatile
  3286                           
  3287                           ;pin_manager.c: 83: WPUC = 0x00;
  3288  01F0  01CF               	clrf	79	;volatile
  3289                           
  3290                           ;pin_manager.c: 88: ODCONA = 0x00;
  3291  01F1  01BA               	clrf	58	;volatile
  3292                           
  3293                           ;pin_manager.c: 89: ODCONB = 0x00;
  3294  01F2  01C5               	clrf	69	;volatile
  3295                           
  3296                           ;pin_manager.c: 90: ODCONC = 0x00;
  3297  01F3  01D0               	clrf	80	;volatile
  3298                           
  3299                           ;pin_manager.c: 95: SLRCONA = 0x3F;
  3300  01F4  303F               	movlw	63
  3301  01F5  00BB               	movwf	59	;volatile
  3302                           
  3303                           ;pin_manager.c: 96: SLRCONB = 0x00;
  3304  01F6  01C6               	clrf	70	;volatile
  3305                           
  3306                           ;pin_manager.c: 97: SLRCONC = 0x3F;
  3307  01F7  303F               	movlw	63
  3308  01F8  00D1               	movwf	81	;volatile
  3309                           
  3310                           ;pin_manager.c: 102: INLVLA = 0x3F;
  3311  01F9  303F               	movlw	63
  3312  01FA  00BC               	movwf	60	;volatile
  3313                           
  3314                           ;pin_manager.c: 103: INLVLB = 0x00;
  3315  01FB  01C7               	clrf	71	;volatile
  3316                           
  3317                           ;pin_manager.c: 104: INLVLC = 0x3F;
  3318  01FC  303F               	movlw	63
  3319  01FD  00D2               	movwf	82	;volatile
  3320                           
  3321                           ;pin_manager.c: 111: GIE=0;
  3322  01FE  138B               	bcf	11,7	;volatile
  3323                           
  3324                           ;pin_manager.c: 112: PPSLOCK=0x55;
  3325  01FF  3055               	movlw	85
  3326  0200  017D               	movlb	61	; select bank61
  3327  0201  008F               	movwf	15	;volsfr
  3328                           
  3329                           ;pin_manager.c: 113: PPSLOCK=0xAA;
  3330  0202  30AA               	movlw	170
  3331  0203  008F               	movwf	15	;volsfr
  3332                           
  3333                           ;pin_manager.c: 114: PPSLOCK=0;
  3334  0204  018F               	clrf	15	;volsfr
  3335                           
  3336                           ;pin_manager.c: 117: RC0PPS = 0x0F;
  3337  0205  300F               	movlw	15
  3338  0206  017E               	movlb	62	; select bank62
  3339  0207  00A0               	movwf	32	;volatile
  3340                           
  3341                           ;pin_manager.c: 118: RX1DTPPS = 0x11;
  3342  0208  3011               	movlw	17
  3343  0209  017D               	movlb	61	; select bank61
  3344  020A  00CB               	movwf	75	;volatile
  3345                           
  3346                           ;pin_manager.c: 120: PPSLOCK=0x55;
  3347  020B  3055               	movlw	85
  3348  020C  008F               	movwf	15	;volsfr
  3349                           
  3350                           ;pin_manager.c: 121: PPSLOCK=0xAA;
  3351  020D  30AA               	movlw	170
  3352  020E  008F               	movwf	15	;volsfr
  3353                           
  3354                           ;pin_manager.c: 122: PPSLOCK=1;
  3355  020F  3001               	movlw	1
  3356  0210  008F               	movwf	15	;volsfr
  3357                           
  3358                           ;pin_manager.c: 123: GIE=1;
  3359  0211  178B               	bsf	11,7	;volatile
  3360  0212  0008               	return
  3361  0213                     __end_of_PIN_MANAGER_Initialize:
  3362                           
  3363                           	psect	text6
  3364  02F9                     __ptext6:	
  3365 ;; *************** function _OSCILLATOR_Initialize *****************
  3366 ;; Defined at:
  3367 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3381 ;;      Params:         0       0       0       0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0
  3384 ;;      Totals:         0       0       0       0       0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 4
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_SYSTEM_Initialize
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _OSCILLATOR_Initialize
  3397  02F9                     _OSCILLATOR_Initialize:
  3398                           
  3399                           ;mcc.c: 62: OSCCON1 = 0x60;
  3400                           
  3401                           ;incstack = 0
  3402                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3403  02F9  3060               	movlw	96
  3404  02FA  0151               	movlb	17	; select bank17
  3405  02FB  008D               	movwf	13	;volatile
  3406                           
  3407                           ;mcc.c: 64: OSCCON3 = 0x00;
  3408  02FC  018F               	clrf	15	;volatile
  3409                           
  3410                           ;mcc.c: 66: OSCEN = 0x00;
  3411  02FD  0191               	clrf	17	;volatile
  3412                           
  3413                           ;mcc.c: 68: OSCFRQ = 0x02;
  3414  02FE  3002               	movlw	2
  3415  02FF  0093               	movwf	19	;volatile
  3416                           
  3417                           ;mcc.c: 70: OSCSTAT = 0x00;
  3418  0300  0190               	clrf	16	;volatile
  3419                           
  3420                           ;mcc.c: 72: OSCTUNE = 0x00;
  3421  0301  0192               	clrf	18	;volatile
  3422  0302  0008               	return
  3423  0303                     __end_of_OSCILLATOR_Initialize:
  3424                           
  3425                           	psect	text7
  3426  0244                     __ptext7:	
  3427 ;; *************** function _EUSART1_Initialize *****************
  3428 ;; Defined at:
  3429 ;;		line 123 in file "mcc_generated_files/eusart1.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0, pclath, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3443 ;;      Params:         0       0       0       0       0       0       0       0
  3444 ;;      Locals:         0       0       0       0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0
  3446 ;;      Totals:         0       0       0       0       0       0       0       0
  3447 ;;Total ram usage:        0 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 5
  3450 ;; This function calls:
  3451 ;;		_EUSART1_SetErrorHandler
  3452 ;;		_EUSART1_SetFramingErrorHandler
  3453 ;;		_EUSART1_SetOverrunErrorHandler
  3454 ;;		_EUSART1_SetRxInterruptHandler
  3455 ;; This function is called by:
  3456 ;;		_SYSTEM_Initialize
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           
  3461                           ;psect for function _EUSART1_Initialize
  3462  0244                     _EUSART1_Initialize:
  3463                           
  3464                           ;eusart1.c: 126: PIE3bits.RC1IE = 0;
  3465                           
  3466                           ;incstack = 0
  3467                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3468  0244  014E               	movlb	14	; select bank14
  3469  0245  1299               	bcf	25,5	;volatile
  3470                           
  3471                           ;eusart1.c: 127: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  3472  0246  3071               	movlw	low _EUSART1_Receive_ISR
  3473  0247  00F4               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  3474  0248  3002               	movlw	high _EUSART1_Receive_ISR
  3475  0249  00F5               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  3476  024A  3183  231F  3182   	fcall	_EUSART1_SetRxInterruptHandler
  3477                           
  3478                           ;eusart1.c: 131: BAUD1CON = 0x08;
  3479  024D  3008               	movlw	8
  3480  024E  0142               	movlb	2	; select bank2
  3481  024F  009F               	movwf	31	;volatile
  3482                           
  3483                           ;eusart1.c: 134: RC1STA = 0x90;
  3484  0250  3090               	movlw	144
  3485  0251  009D               	movwf	29	;volatile
  3486                           
  3487                           ;eusart1.c: 137: TX1STA = 0x24;
  3488  0252  3024               	movlw	36
  3489  0253  009E               	movwf	30	;volatile
  3490                           
  3491                           ;eusart1.c: 140: SP1BRGL = 0xA0;
  3492  0254  30A0               	movlw	160
  3493  0255  009B               	movwf	27	;volatile
  3494                           
  3495                           ;eusart1.c: 143: SP1BRGH = 0x01;
  3496  0256  3001               	movlw	1
  3497  0257  009C               	movwf	28	;volatile
  3498                           
  3499                           ;eusart1.c: 146: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3500  0258  3049               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3501  0259  00F4               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  3502  025A  3003               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3503  025B  00F5               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  3504  025C  3183  232B  3182   	fcall	_EUSART1_SetFramingErrorHandler
  3505                           
  3506                           ;eusart1.c: 147: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3507  025F  3042               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3508  0260  00F4               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  3509  0261  3003               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3510  0262  00F5               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  3511  0263  3183  2325  3182   	fcall	_EUSART1_SetOverrunErrorHandler
  3512                           
  3513                           ;eusart1.c: 148: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3514  0266  3046               	movlw	low _EUSART1_DefaultErrorHandler
  3515  0267  00F4               	movwf	EUSART1_SetErrorHandler@interruptHandler
  3516  0268  3003               	movlw	high _EUSART1_DefaultErrorHandler
  3517  0269  00F5               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  3518  026A  3183  2331         	fcall	_EUSART1_SetErrorHandler
  3519                           
  3520                           ;eusart1.c: 150: eusart1RxLastError.status = 0;
  3521  026C  01F6               	clrf	_eusart1RxLastError	;volatile
  3522                           
  3523                           ;eusart1.c: 155: eusart1RxCount = 0;
  3524  026D  01F7               	clrf	_eusart1RxCount	;volatile
  3525                           
  3526                           ;eusart1.c: 158: PIE3bits.RC1IE = 1;
  3527  026E  014E               	movlb	14	; select bank14
  3528  026F  1699               	bsf	25,5	;volatile
  3529  0270  0008               	return
  3530  0271                     __end_of_EUSART1_Initialize:
  3531                           
  3532                           	psect	text8
  3533  031F                     __ptext8:	
  3534 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3535 ;; Defined at:
  3536 ;;		line 310 in file "mcc_generated_files/eusart1.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  3539 ;;		 -> EUSART1_Receive_ISR(1), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3551 ;;      Params:         2       0       0       0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0
  3554 ;;      Totals:         2       0       0       0       0       0       0       0
  3555 ;;Total ram usage:        2 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 4
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_EUSART1_Initialize
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           
  3566                           ;psect for function _EUSART1_SetRxInterruptHandler
  3567  031F                     _EUSART1_SetRxInterruptHandler:
  3568                           
  3569                           ;eusart1.c: 311: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3570                           
  3571                           ;incstack = 0
  3572                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  3573  031F  0875               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  3574  0320  0140               	movlb	0	; select bank0
  3575  0321  00D1               	movwf	_EUSART1_RxDefaultInterruptHandler+1
  3576  0322  0874               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  3577  0323  00D0               	movwf	_EUSART1_RxDefaultInterruptHandler
  3578  0324  0008               	return
  3579  0325                     __end_of_EUSART1_SetRxInterruptHandler:
  3580                           
  3581                           	psect	text9
  3582  0325                     __ptext9:	
  3583 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3584 ;; Defined at:
  3585 ;;		line 301 in file "mcc_generated_files/eusart1.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  3588 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3600 ;;      Params:         2       0       0       0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0
  3603 ;;      Totals:         2       0       0       0       0       0       0       0
  3604 ;;Total ram usage:        2 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; Hardware stack levels required when called: 4
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_EUSART1_Initialize
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function _EUSART1_SetOverrunErrorHandler
  3616  0325                     _EUSART1_SetOverrunErrorHandler:
  3617                           
  3618                           ;eusart1.c: 302: EUSART1_OverrunErrorHandler = interruptHandler;
  3619                           
  3620                           ;incstack = 0
  3621                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  3622  0325  0875               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  3623  0326  0140               	movlb	0	; select bank0
  3624  0327  00CD               	movwf	_EUSART1_OverrunErrorHandler+1
  3625  0328  0874               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  3626  0329  00CC               	movwf	_EUSART1_OverrunErrorHandler
  3627  032A  0008               	return
  3628  032B                     __end_of_EUSART1_SetOverrunErrorHandler:
  3629                           
  3630                           	psect	text10
  3631  032B                     __ptext10:	
  3632 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3633 ;; Defined at:
  3634 ;;		line 297 in file "mcc_generated_files/eusart1.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  3637 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3649 ;;      Params:         2       0       0       0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0
  3652 ;;      Totals:         2       0       0       0       0       0       0       0
  3653 ;;Total ram usage:        2 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 4
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_EUSART1_Initialize
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           
  3664                           ;psect for function _EUSART1_SetFramingErrorHandler
  3665  032B                     _EUSART1_SetFramingErrorHandler:
  3666                           
  3667                           ;eusart1.c: 298: EUSART1_FramingErrorHandler = interruptHandler;
  3668                           
  3669                           ;incstack = 0
  3670                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  3671  032B  0875               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  3672  032C  0140               	movlb	0	; select bank0
  3673  032D  00CF               	movwf	_EUSART1_FramingErrorHandler+1
  3674  032E  0874               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  3675  032F  00CE               	movwf	_EUSART1_FramingErrorHandler
  3676  0330  0008               	return
  3677  0331                     __end_of_EUSART1_SetFramingErrorHandler:
  3678                           
  3679                           	psect	text11
  3680  0331                     __ptext11:	
  3681 ;; *************** function _EUSART1_SetErrorHandler *****************
  3682 ;; Defined at:
  3683 ;;		line 305 in file "mcc_generated_files/eusart1.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  3686 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3698 ;;      Params:         2       0       0       0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0
  3701 ;;      Totals:         2       0       0       0       0       0       0       0
  3702 ;;Total ram usage:        2 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; Hardware stack levels required when called: 4
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_EUSART1_Initialize
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           
  3713                           ;psect for function _EUSART1_SetErrorHandler
  3714  0331                     _EUSART1_SetErrorHandler:
  3715                           
  3716                           ;eusart1.c: 306: EUSART1_ErrorHandler = interruptHandler;
  3717                           
  3718                           ;incstack = 0
  3719                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  3720  0331  0875               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  3721  0332  0140               	movlb	0	; select bank0
  3722  0333  00CB               	movwf	_EUSART1_ErrorHandler+1
  3723  0334  0874               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  3724  0335  00CA               	movwf	_EUSART1_ErrorHandler
  3725  0336  0008               	return
  3726  0337                     __end_of_EUSART1_SetErrorHandler:
  3727                           
  3728                           	psect	text12
  3729  015D                     __ptext12:	
  3730 ;; *************** function _RxProc *****************
  3731 ;; Defined at:
  3732 ;;		line 103 in file "mcc_generated_files/eusart1.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  flash           2   24[BANK0 ] unsigned int 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3746 ;;      Params:         0       0       0       0       0       0       0       0
  3747 ;;      Locals:         0       2       0       0       0       0       0       0
  3748 ;;      Temps:          0       3       0       0       0       0       0       0
  3749 ;;      Totals:         0       5       0       0       0       0       0       0
  3750 ;;Total ram usage:        5 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; Hardware stack levels required when called: 7
  3753 ;; This function calls:
  3754 ;;		_FLASH_WriteWord
  3755 ;;		_RxAnswer
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           
  3762                           ;psect for function _RxProc
  3763  015D                     _RxProc:
  3764                           
  3765                           ;eusart1.c: 105: uint16_t flash;;eusart1.c: 106: switch (eusart1RxBuffer[2])
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in _RxProc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3769  015D  2992               	goto	l1856
  3770  015E                     l261:	
  3771                           ;eusart1.c: 107: {;eusart1.c: 108: case 0x01:
  3772                           
  3773                           
  3774                           ;eusart1.c: 109: LATAbits.LATA2=0;
  3775  015E  1118               	bcf	24,2	;volatile
  3776                           
  3777                           ;eusart1.c: 110: RxAnswer(0x01);
  3778  015F  3001               	movlw	1
  3779  0160  3182  2213  3181   	fcall	_RxAnswer
  3780                           
  3781                           ;eusart1.c: 111: break;
  3782  0163  299B               	goto	l1858
  3783  0164                     l1848:
  3784                           
  3785                           ;eusart1.c: 113: flash=0x3030+((uint16_t)(eusart1RxBuffer[2]>>4))<<8+(uint16_t)(eusart1R
      +                          xBuffer[2]&0x0f);
  3786  0164  0840               	movf	_eusart1RxBuffer+2,w	;volatile
  3787  0165  00B5               	movwf	??_RxProc
  3788  0166  3004               	movlw	4
  3789  0167                     u605:
  3790  0167  36B5               	lsrf	??_RxProc,f
  3791  0168  0B89               	decfsz	9,f
  3792  0169  2967               	goto	u605
  3793  016A  0835               	movf	??_RxProc,w
  3794  016B  3E30               	addlw	48
  3795  016C  00B6               	movwf	??_RxProc+1
  3796  016D  3030               	movlw	48
  3797  016E  1803               	skipnc
  3798  016F  3031               	movlw	49
  3799  0170  00B7               	movwf	??_RxProc+2
  3800  0171  0840               	movf	_eusart1RxBuffer+2,w	;volatile
  3801  0172  390F               	andlw	15
  3802  0173  3E08               	addlw	8
  3803  0174  0A89               	incf	9,f
  3804  0175  2978               	goto	u614
  3805  0176                     u615:
  3806  0176  35B6               	lslf	??_RxProc+1,f
  3807  0177  0DB7               	rlf	??_RxProc+2,f
  3808  0178                     u614:
  3809  0178  0B89               	decfsz	9,f
  3810  0179  2976               	goto	u615
  3811  017A  0836               	movf	??_RxProc+1,w
  3812  017B  00B8               	movwf	RxProc@flash
  3813  017C  0837               	movf	??_RxProc+2,w
  3814  017D  00B9               	movwf	RxProc@flash+1
  3815                           
  3816                           ;eusart1.c: 114: FLASH_WriteWord(0x0fe0+4, flashBlock, flash);
  3817  017E  30E4               	movlw	228
  3818  017F  00AB               	movwf	FLASH_WriteWord@flashAddr
  3819  0180  300F               	movlw	15
  3820  0181  00AC               	movwf	FLASH_WriteWord@flashAddr+1
  3821  0182  30A0               	movlw	(low (_flashBlock| 0))& (0+255)
  3822  0183  00B5               	movwf	??_RxProc
  3823  0184  0835               	movf	??_RxProc,w
  3824  0185  00AD               	movwf	FLASH_WriteWord@ramBuf
  3825  0186  0839               	movf	RxProc@flash+1,w
  3826  0187  00AF               	movwf	FLASH_WriteWord@word+1
  3827  0188  0838               	movf	RxProc@flash,w
  3828  0189  00AE               	movwf	FLASH_WriteWord@word
  3829  018A  3181  219D  3181   	fcall	_FLASH_WriteWord
  3830                           
  3831                           ;eusart1.c: 115: RxAnswer(0x02);
  3832  018D  3002               	movlw	2
  3833  018E  3182  2213  3181   	fcall	_RxAnswer
  3834  0191  299B               	goto	l1858
  3835  0192                     l1856:
  3836  0192  0140               	movlb	0	; select bank0
  3837  0193  0840               	movf	_eusart1RxBuffer+2,w	;volatile
  3838                           
  3839                           ; Switch size 1, requested type "simple"
  3840                           ; Number of cases is 2, Range of values is 1 to 16
  3841                           ; switch strategies available:
  3842                           ; Name         Instructions Cycles
  3843                           ; simple_byte            7     4 (average)
  3844                           ; direct_byte           41     9 (fixed)
  3845                           ; jumptable            263     9 (fixed)
  3846                           ;	Chosen strategy is simple_byte
  3847  0194  3A01               	xorlw	1	; case 1
  3848  0195  1903               	skipnz
  3849  0196  295E               	goto	l261
  3850  0197  3A11               	xorlw	17	; case 16
  3851  0198  1903               	skipnz
  3852  0199  2964               	goto	l1848
  3853  019A  299B               	goto	l1858
  3854  019B                     l1858:
  3855                           
  3856                           ;eusart1.c: 119: eusart1RxCount=0;
  3857  019B  01F7               	clrf	_eusart1RxCount	;volatile
  3858  019C  0008               	return
  3859  019D                     __end_of_RxProc:
  3860                           
  3861                           	psect	text13
  3862  0213                     __ptext13:	
  3863 ;; *************** function _RxAnswer *****************
  3864 ;; Defined at:
  3865 ;;		line 89 in file "mcc_generated_files/eusart1.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  command         1    wreg     unsigned char 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  command         1    0[BANK0 ] unsigned char 
  3870 ;;  sum             1    1[BANK0 ] unsigned char 
  3871 ;;  i               1    0        unsigned char 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0, pclath, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3881 ;;      Params:         0       0       0       0       0       0       0       0
  3882 ;;      Locals:         0       2       0       0       0       0       0       0
  3883 ;;      Temps:          1       0       0       0       0       0       0       0
  3884 ;;      Totals:         1       2       0       0       0       0       0       0
  3885 ;;Total ram usage:        3 bytes
  3886 ;; Hardware stack levels used: 1
  3887 ;; Hardware stack levels required when called: 5
  3888 ;; This function calls:
  3889 ;;		_EUSART1_Write
  3890 ;; This function is called by:
  3891 ;;		_RxProc
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           
  3896                           ;psect for function _RxAnswer
  3897  0213                     _RxAnswer:
  3898                           
  3899                           ;incstack = 0
  3900                           ; Regs used in _RxAnswer: [wreg+status,2+status,0+pclath+cstack]
  3901                           ;RxAnswer@command stored from wreg
  3902  0213  0140               	movlb	0	; select bank0
  3903  0214  00A0               	movwf	RxAnswer@command
  3904                           
  3905                           ;eusart1.c: 91: uint8_t i,sum=0;
  3906  0215  01A1               	clrf	RxAnswer@sum
  3907                           
  3908                           ;eusart1.c: 92: EUSART1_Write(0x16);
  3909  0216  3016               	movlw	22
  3910  0217  3183  230B  3182   	fcall	_EUSART1_Write
  3911                           
  3912                           ;eusart1.c: 93: EUSART1_Write(MBusAddr);
  3913  021A  0878               	movf	_MBusAddr,w
  3914  021B  3183  230B  3182   	fcall	_EUSART1_Write
  3915                           
  3916                           ;eusart1.c: 94: EUSART1_Write(command);
  3917  021E  0140               	movlb	0	; select bank0
  3918  021F  0820               	movf	RxAnswer@command,w
  3919  0220  3183  230B  3182   	fcall	_EUSART1_Write
  3920                           
  3921                           ;eusart1.c: 95: EUSART1_Write(0x01);
  3922  0223  3001               	movlw	1
  3923  0224  3183  230B  3182   	fcall	_EUSART1_Write
  3924                           
  3925                           ;eusart1.c: 96: sum=(uint8_t)(sum+0x16);
  3926  0227  0140               	movlb	0	; select bank0
  3927  0228  0821               	movf	RxAnswer@sum,w
  3928  0229  3E16               	addlw	22
  3929  022A  00F5               	movwf	??_RxAnswer
  3930  022B  0875               	movf	??_RxAnswer,w
  3931  022C  00A1               	movwf	RxAnswer@sum
  3932                           
  3933                           ;eusart1.c: 97: sum=(uint8_t)(sum+MBusAddr);
  3934  022D  0821               	movf	RxAnswer@sum,w
  3935  022E  0778               	addwf	_MBusAddr,w
  3936  022F  00F5               	movwf	??_RxAnswer
  3937  0230  0875               	movf	??_RxAnswer,w
  3938  0231  00A1               	movwf	RxAnswer@sum
  3939                           
  3940                           ;eusart1.c: 98: sum=(uint8_t)(sum+command);
  3941  0232  0821               	movf	RxAnswer@sum,w
  3942  0233  0720               	addwf	RxAnswer@command,w
  3943  0234  00F5               	movwf	??_RxAnswer
  3944  0235  0875               	movf	??_RxAnswer,w
  3945  0236  00A1               	movwf	RxAnswer@sum
  3946                           
  3947                           ;eusart1.c: 99: sum=(uint8_t)(sum+0x01);
  3948  0237  0821               	movf	RxAnswer@sum,w
  3949  0238  3E01               	addlw	1
  3950  0239  00F5               	movwf	??_RxAnswer
  3951  023A  0875               	movf	??_RxAnswer,w
  3952  023B  00A1               	movwf	RxAnswer@sum
  3953                           
  3954                           ;eusart1.c: 100: EUSART1_Write(sum);
  3955  023C  0821               	movf	RxAnswer@sum,w
  3956  023D  3183  230B  3182   	fcall	_EUSART1_Write
  3957                           
  3958                           ;eusart1.c: 101: EUSART1_Write(0x0d);
  3959  0240  300D               	movlw	13
  3960  0241  3183  230B         	fcall	_EUSART1_Write
  3961  0243  0008               	return
  3962  0244                     __end_of_RxAnswer:
  3963                           
  3964                           	psect	text14
  3965  030B                     __ptext14:	
  3966 ;; *************** function _EUSART1_Write *****************
  3967 ;; Defined at:
  3968 ;;		line 202 in file "mcc_generated_files/eusart1.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  txData          1    wreg     unsigned char 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  txData          1    4[COMMON] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3982 ;;      Params:         0       0       0       0       0       0       0       0
  3983 ;;      Locals:         1       0       0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0
  3985 ;;      Totals:         1       0       0       0       0       0       0       0
  3986 ;;Total ram usage:        1 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 4
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_RxAnswer
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           
  3997                           ;psect for function _EUSART1_Write
  3998  030B                     _EUSART1_Write:
  3999                           
  4000                           ;incstack = 0
  4001                           ; Regs used in _EUSART1_Write: [wreg]
  4002                           ;EUSART1_Write@txData stored from wreg
  4003  030B  00F4               	movwf	EUSART1_Write@txData
  4004  030C                     l271:	
  4005                           ;eusart1.c: 205: {
  4006                           
  4007  030C  014E               	movlb	14	; select bank14
  4008  030D  1E0F               	btfss	15,4	;volatile
  4009  030E  2B0C               	goto	l271
  4010                           
  4011                           ;eusart1.c: 206: };eusart1.c: 208: TX1REG = txData;
  4012  030F  0874               	movf	EUSART1_Write@txData,w
  4013  0310  0142               	movlb	2	; select bank2
  4014  0311  009A               	movwf	26	;volatile
  4015  0312  0008               	return
  4016  0313                     __end_of_EUSART1_Write:
  4017                           
  4018                           	psect	text15
  4019  019D                     __ptext15:	
  4020 ;; *************** function _FLASH_WriteWord *****************
  4021 ;; Defined at:
  4022 ;;		line 75 in file "mcc_generated_files/memory.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  flashAddr       2   11[BANK0 ] unsigned int 
  4025 ;;  ramBuf          1   13[BANK0 ] PTR unsigned int 
  4026 ;;		 -> flashBlock(64), 
  4027 ;;  word            2   14[BANK0 ] unsigned int 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  blockStartAd    2   18[BANK0 ] unsigned int 
  4030 ;;  i               1   20[BANK0 ] unsigned char 
  4031 ;;  offset          1   17[BANK0 ] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4041 ;;      Params:         0       5       0       0       0       0       0       0
  4042 ;;      Locals:         0       4       0       0       0       0       0       0
  4043 ;;      Temps:          0       1       0       0       0       0       0       0
  4044 ;;      Totals:         0      10       0       0       0       0       0       0
  4045 ;;Total ram usage:       10 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 6
  4048 ;; This function calls:
  4049 ;;		_FLASH_ReadWord
  4050 ;;		_FLASH_WriteBlock
  4051 ;; This function is called by:
  4052 ;;		_RxProc
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           
  4058                           ;psect for function _FLASH_WriteWord
  4059  019D                     _FLASH_WriteWord:
  4060                           
  4061                           ;memory.c: 77: uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x1000-1) ^ (32-1)));
  4062                           
  4063                           ;incstack = 0
  4064                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4065  019D  30E0               	movlw	224
  4066  019E  0140               	movlb	0	; select bank0
  4067  019F  052B               	andwf	FLASH_WriteWord@flashAddr,w
  4068  01A0  00B2               	movwf	FLASH_WriteWord@blockStartAddr
  4069  01A1  300F               	movlw	15
  4070  01A2  052C               	andwf	FLASH_WriteWord@flashAddr+1,w
  4071  01A3  00B3               	movwf	FLASH_WriteWord@blockStartAddr+1
  4072                           
  4073                           ;memory.c: 78: uint8_t offset = (uint8_t)(flashAddr & (32-1));
  4074  01A4  082B               	movf	FLASH_WriteWord@flashAddr,w
  4075  01A5  391F               	andlw	31
  4076  01A6  00B0               	movwf	??_FLASH_WriteWord
  4077  01A7  0830               	movf	??_FLASH_WriteWord,w
  4078  01A8  00B1               	movwf	FLASH_WriteWord@offset
  4079                           
  4080                           ;memory.c: 79: uint8_t i;;memory.c: 82: for (i=0; i<32; i++)
  4081  01A9  01B4               	clrf	FLASH_WriteWord@i
  4082  01AA                     l1812:
  4083                           
  4084                           ;memory.c: 83: {;memory.c: 84: ramBuf[i] = FLASH_ReadWord((blockStartAddr+i));
  4085  01AA  0834               	movf	FLASH_WriteWord@i,w
  4086  01AB  0732               	addwf	FLASH_WriteWord@blockStartAddr,w
  4087  01AC  00F4               	movwf	FLASH_ReadWord@flashAddr
  4088  01AD  0833               	movf	FLASH_WriteWord@blockStartAddr+1,w
  4089  01AE  1803               	skipnc
  4090  01AF  0A33               	incf	FLASH_WriteWord@blockStartAddr+1,w
  4091  01B0  00F5               	movwf	FLASH_ReadWord@flashAddr+1
  4092  01B1  3182  22B1  3181   	fcall	_FLASH_ReadWord
  4093  01B4  0140               	movlb	0	; select bank0
  4094  01B5  3534               	lslf	FLASH_WriteWord@i,w
  4095  01B6  072D               	addwf	FLASH_WriteWord@ramBuf,w
  4096  01B7  00B0               	movwf	??_FLASH_WriteWord
  4097  01B8  0830               	movf	??_FLASH_WriteWord,w
  4098  01B9  0086               	movwf	6
  4099  01BA  0187               	clrf	7
  4100  01BB  0874               	movf	?_FLASH_ReadWord,w
  4101  01BC  3FC0               	movwi [0]fsr1
  4102  01BD  0875               	movf	?_FLASH_ReadWord+1,w
  4103  01BE  3FC1               	movwi [1]fsr1
  4104  01BF  3001               	movlw	1
  4105  01C0  00B0               	movwf	??_FLASH_WriteWord
  4106  01C1  0830               	movf	??_FLASH_WriteWord,w
  4107  01C2  07B4               	addwf	FLASH_WriteWord@i,f
  4108  01C3  3020               	movlw	32
  4109  01C4  0234               	subwf	FLASH_WriteWord@i,w
  4110  01C5  1C03               	skipc
  4111  01C6  29AA               	goto	l1812
  4112                           
  4113                           ;memory.c: 85: };memory.c: 88: ramBuf[offset] = word;
  4114  01C7  3531               	lslf	FLASH_WriteWord@offset,w
  4115  01C8  072D               	addwf	FLASH_WriteWord@ramBuf,w
  4116  01C9  00B0               	movwf	??_FLASH_WriteWord
  4117  01CA  0830               	movf	??_FLASH_WriteWord,w
  4118  01CB  0086               	movwf	6
  4119  01CC  0187               	clrf	7
  4120  01CD  082E               	movf	FLASH_WriteWord@word,w
  4121  01CE  3FC0               	movwi [0]fsr1
  4122  01CF  082F               	movf	FLASH_WriteWord@word+1,w
  4123  01D0  3FC1               	movwi [1]fsr1
  4124                           
  4125                           ;memory.c: 91: FLASH_WriteBlock(blockStartAddr, ramBuf);
  4126  01D1  0833               	movf	FLASH_WriteWord@blockStartAddr+1,w
  4127  01D2  00A2               	movwf	FLASH_WriteBlock@writeAddr+1
  4128  01D3  0832               	movf	FLASH_WriteWord@blockStartAddr,w
  4129  01D4  00A1               	movwf	FLASH_WriteBlock@writeAddr
  4130  01D5  082D               	movf	FLASH_WriteWord@ramBuf,w
  4131  01D6  00B0               	movwf	??_FLASH_WriteWord
  4132  01D7  0830               	movf	??_FLASH_WriteWord,w
  4133  01D8  00A3               	movwf	FLASH_WriteBlock@flashWordArray
  4134  01D9  3180  20A8         	fcall	_FLASH_WriteBlock
  4135  01DB  0008               	return
  4136  01DC                     __end_of_FLASH_WriteWord:
  4137                           
  4138                           	psect	text16
  4139  00A8                     __ptext16:	
  4140 ;; *************** function _FLASH_WriteBlock *****************
  4141 ;; Defined at:
  4142 ;;		line 94 in file "mcc_generated_files/memory.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  writeAddr       2    1[BANK0 ] unsigned int 
  4145 ;;  flashWordArr    1    3[BANK0 ] PTR unsigned int 
  4146 ;;		 -> flashBlock(64), 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  blockStartAd    2    7[BANK0 ] unsigned int 
  4149 ;;  i               1   10[BANK0 ] unsigned char 
  4150 ;;  GIEBitValue     1    9[BANK0 ] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      char 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4160 ;;      Params:         0       3       0       0       0       0       0       0
  4161 ;;      Locals:         0       4       0       0       0       0       0       0
  4162 ;;      Temps:          0       3       0       0       0       0       0       0
  4163 ;;      Totals:         0      10       0       0       0       0       0       0
  4164 ;;Total ram usage:       10 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; Hardware stack levels required when called: 5
  4167 ;; This function calls:
  4168 ;;		_FLASH_EraseBlock
  4169 ;; This function is called by:
  4170 ;;		_FLASH_WriteWord
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           
  4175                           ;psect for function _FLASH_WriteBlock
  4176  00A8                     _FLASH_WriteBlock:
  4177                           
  4178                           ;memory.c: 96: uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x1000-1) ^ (32-1)));
  4179                           
  4180                           ;incstack = 0
  4181                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4182  00A8  30E0               	movlw	224
  4183  00A9  0140               	movlb	0	; select bank0
  4184  00AA  0521               	andwf	FLASH_WriteBlock@writeAddr,w
  4185  00AB  00A7               	movwf	FLASH_WriteBlock@blockStartAddr
  4186  00AC  300F               	movlw	15
  4187  00AD  0522               	andwf	FLASH_WriteBlock@writeAddr+1,w
  4188  00AE  00A8               	movwf	FLASH_WriteBlock@blockStartAddr+1
  4189                           
  4190                           ;memory.c: 97: uint8_t GIEBitValue = INTCONbits.GIE;
  4191  00AF  3000               	movlw	0
  4192  00B0  1B8B               	btfsc	11,7	;volatile
  4193  00B1  3001               	movlw	1
  4194  00B2  00A9               	movwf	FLASH_WriteBlock@GIEBitValue
  4195                           
  4196                           ;memory.c: 98: uint8_t i;;memory.c: 102: if( writeAddr != blockStartAddr )
  4197  00B3  0828               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  4198  00B4  0622               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  4199  00B5  1D03               	skipz
  4200  00B6  28B9               	goto	u555
  4201  00B7  0827               	movf	FLASH_WriteBlock@blockStartAddr,w
  4202  00B8  0621               	xorwf	FLASH_WriteBlock@writeAddr,w
  4203  00B9                     u555:
  4204  00B9  1D03               	btfss	3,2
  4205  00BA  0008               	return
  4206                           
  4207                           ;memory.c: 105: };memory.c: 107: INTCONbits.GIE = 0;
  4208  00BB  138B               	bcf	11,7	;volatile
  4209                           
  4210                           ;memory.c: 110: FLASH_EraseBlock(writeAddr);
  4211  00BC  0822               	movf	FLASH_WriteBlock@writeAddr+1,w
  4212  00BD  00F5               	movwf	FLASH_EraseBlock@startAddr+1
  4213  00BE  0821               	movf	FLASH_WriteBlock@writeAddr,w
  4214  00BF  00F4               	movwf	FLASH_EraseBlock@startAddr
  4215  00C0  3182  2293  3180   	fcall	_FLASH_EraseBlock
  4216                           
  4217                           ;memory.c: 113: NVMCON1bits.NVMREGS = 0;
  4218  00C3  0150               	movlb	16	; select bank16
  4219  00C4  131E               	bcf	30,6	;volsfr
  4220                           
  4221                           ;memory.c: 114: NVMCON1bits.WREN = 1;
  4222  00C5  151E               	bsf	30,2	;volsfr
  4223                           
  4224                           ;memory.c: 115: NVMCON1bits.LWLO = 1;
  4225  00C6  169E               	bsf	30,5	;volsfr
  4226                           
  4227                           ;memory.c: 117: for (i=0; i<32; i++)
  4228  00C7  0140               	movlb	0	; select bank0
  4229  00C8  01AA               	clrf	FLASH_WriteBlock@i
  4230  00C9                     l1772:
  4231                           
  4232                           ;memory.c: 118: {;memory.c: 120: NVMADRL = (writeAddr & 0xFF);
  4233  00C9  0821               	movf	FLASH_WriteBlock@writeAddr,w
  4234  00CA  0150               	movlb	16	; select bank16
  4235  00CB  009A               	movwf	26	;volatile
  4236                           
  4237                           ;memory.c: 122: NVMADRH = ((writeAddr & 0xFF00) >> 8);
  4238  00CC  0140               	movlb	0	; select bank0
  4239  00CD  0822               	movf	FLASH_WriteBlock@writeAddr+1,w
  4240  00CE  0150               	movlb	16	; select bank16
  4241  00CF  009B               	movwf	27	;volatile
  4242                           
  4243                           ;memory.c: 125: NVMDATL = flashWordArray[i];
  4244  00D0  0140               	movlb	0	; select bank0
  4245  00D1  352A               	lslf	FLASH_WriteBlock@i,w
  4246  00D2  0723               	addwf	FLASH_WriteBlock@flashWordArray,w
  4247  00D3  00A4               	movwf	??_FLASH_WriteBlock
  4248  00D4  0824               	movf	??_FLASH_WriteBlock,w
  4249  00D5  0086               	movwf	6
  4250  00D6  0187               	clrf	7
  4251  00D7  0801               	movf	1,w
  4252  00D8  0150               	movlb	16	; select bank16
  4253  00D9  009C               	movwf	28	;volatile
  4254                           
  4255                           ;memory.c: 126: NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  4256  00DA  0140               	movlb	0	; select bank0
  4257  00DB  352A               	lslf	FLASH_WriteBlock@i,w
  4258  00DC  0723               	addwf	FLASH_WriteBlock@flashWordArray,w
  4259  00DD  00A4               	movwf	??_FLASH_WriteBlock
  4260  00DE  0824               	movf	??_FLASH_WriteBlock,w
  4261  00DF  0086               	movwf	6
  4262  00E0  0187               	clrf	7
  4263  00E1  3F40               	moviw [0]fsr1
  4264  00E2  00A5               	movwf	??_FLASH_WriteBlock+1
  4265  00E3  3F41               	moviw [1]fsr1
  4266  00E4  00A6               	movwf	??_FLASH_WriteBlock+2
  4267  00E5  0826               	movf	??_FLASH_WriteBlock+2,w
  4268  00E6  0150               	movlb	16	; select bank16
  4269  00E7  009D               	movwf	29	;volatile
  4270                           
  4271                           ;memory.c: 128: if(i == (32-1))
  4272  00E8  301F               	movlw	31
  4273  00E9  0140               	movlb	0	; select bank0
  4274  00EA  062A               	xorwf	FLASH_WriteBlock@i,w
  4275  00EB  1D03               	btfss	3,2
  4276  00EC  28EF               	goto	l1784
  4277                           
  4278                           ;memory.c: 129: {;memory.c: 131: NVMCON1bits.LWLO = 0;
  4279  00ED  0150               	movlb	16	; select bank16
  4280  00EE  129E               	bcf	30,5	;volsfr
  4281  00EF                     l1784:
  4282                           
  4283                           ;memory.c: 132: };memory.c: 134: NVMCON2 = 0x55;
  4284  00EF  3055               	movlw	85
  4285  00F0  0150               	movlb	16	; select bank16
  4286  00F1  009F               	movwf	31	;volsfr
  4287                           
  4288                           ;memory.c: 135: NVMCON2 = 0xAA;
  4289  00F2  30AA               	movlw	170
  4290  00F3  009F               	movwf	31	;volsfr
  4291                           
  4292                           ;memory.c: 136: NVMCON1bits.WR = 1;
  4293  00F4  149E               	bsf	30,1	;volsfr
  4294                           
  4295                           ;memory.c: 137: __nop();
  4296  00F5  0000               	nop
  4297                           
  4298                           ;memory.c: 138: __nop();
  4299  00F6  0000               	nop
  4300                           
  4301                           ;memory.c: 140: writeAddr++;
  4302  00F7  3001               	movlw	1
  4303  00F8  0140               	movlb	0	; select bank0
  4304  00F9  07A1               	addwf	FLASH_WriteBlock@writeAddr,f
  4305  00FA  3000               	movlw	0
  4306  00FB  3DA2               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  4307  00FC  3001               	movlw	1
  4308  00FD  00A4               	movwf	??_FLASH_WriteBlock
  4309  00FE  0824               	movf	??_FLASH_WriteBlock,w
  4310  00FF  07AA               	addwf	FLASH_WriteBlock@i,f
  4311  0100  3020               	movlw	32
  4312  0101  022A               	subwf	FLASH_WriteBlock@i,w
  4313  0102  1C03               	skipc
  4314  0103  28C9               	goto	l1772
  4315                           
  4316                           ;memory.c: 141: };memory.c: 143: NVMCON1bits.WREN = 0;
  4317  0104  0150               	movlb	16	; select bank16
  4318  0105  111E               	bcf	30,2	;volsfr
  4319                           
  4320                           ;memory.c: 144: INTCONbits.GIE = GIEBitValue;
  4321  0106  0140               	movlb	0	; select bank0
  4322  0107  0C29               	rrf	FLASH_WriteBlock@GIEBitValue,w
  4323  0108  1C03               	skipc
  4324  0109  138B               	bcf	11,7	;volatile
  4325  010A  1803               	skipnc
  4326  010B  178B               	bsf	11,7	;volatile
  4327  010C  0008               	return
  4328  010D                     __end_of_FLASH_WriteBlock:
  4329                           
  4330                           	psect	text17
  4331  0293                     __ptext17:	
  4332 ;; *************** function _FLASH_EraseBlock *****************
  4333 ;; Defined at:
  4334 ;;		line 149 in file "mcc_generated_files/memory.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  startAddr       2    4[COMMON] unsigned int 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  GIEBitValue     1    0[BANK0 ] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4348 ;;      Params:         2       0       0       0       0       0       0       0
  4349 ;;      Locals:         0       1       0       0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0
  4351 ;;      Totals:         2       1       0       0       0       0       0       0
  4352 ;;Total ram usage:        3 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 4
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_FLASH_WriteBlock
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           
  4363                           ;psect for function _FLASH_EraseBlock
  4364  0293                     _FLASH_EraseBlock:
  4365                           
  4366                           ;memory.c: 151: uint8_t GIEBitValue = INTCONbits.GIE;
  4367                           
  4368                           ;incstack = 0
  4369                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  4370  0293  3000               	movlw	0
  4371  0294  1B8B               	btfsc	11,7	;volatile
  4372  0295  3001               	movlw	1
  4373  0296  0140               	movlb	0	; select bank0
  4374  0297  00A0               	movwf	FLASH_EraseBlock@GIEBitValue
  4375                           
  4376                           ;memory.c: 154: INTCONbits.GIE = 0;
  4377  0298  138B               	bcf	11,7	;volatile
  4378                           
  4379                           ;memory.c: 156: NVMADRL = (startAddr & 0xFF);
  4380  0299  0874               	movf	FLASH_EraseBlock@startAddr,w
  4381  029A  0150               	movlb	16	; select bank16
  4382  029B  009A               	movwf	26	;volatile
  4383                           
  4384                           ;memory.c: 158: NVMADRH = ((startAddr & 0xFF00) >> 8);
  4385  029C  0875               	movf	FLASH_EraseBlock@startAddr+1,w
  4386  029D  009B               	movwf	27	;volatile
  4387                           
  4388                           ;memory.c: 161: NVMCON1bits.NVMREGS = 0;
  4389  029E  131E               	bcf	30,6	;volsfr
  4390                           
  4391                           ;memory.c: 162: NVMCON1bits.FREE = 1;
  4392  029F  161E               	bsf	30,4	;volsfr
  4393                           
  4394                           ;memory.c: 163: NVMCON1bits.WREN = 1;
  4395  02A0  151E               	bsf	30,2	;volsfr
  4396                           
  4397                           ;memory.c: 166: NVMCON2 = 0x55;
  4398  02A1  3055               	movlw	85
  4399  02A2  009F               	movwf	31	;volsfr
  4400                           
  4401                           ;memory.c: 167: NVMCON2 = 0xAA;
  4402  02A3  30AA               	movlw	170
  4403  02A4  009F               	movwf	31	;volsfr
  4404                           
  4405                           ;memory.c: 168: NVMCON1bits.WR = 1;
  4406  02A5  149E               	bsf	30,1	;volsfr
  4407                           
  4408                           ;memory.c: 169: __nop();
  4409  02A6  0000               	nop
  4410                           
  4411                           ;memory.c: 170: __nop();
  4412  02A7  0000               	nop
  4413                           
  4414                           ;memory.c: 172: NVMCON1bits.WREN = 0;
  4415  02A8  0150               	movlb	16	; select bank16
  4416  02A9  111E               	bcf	30,2	;volsfr
  4417                           
  4418                           ;memory.c: 173: INTCONbits.GIE = GIEBitValue;
  4419  02AA  0140               	movlb	0	; select bank0
  4420  02AB  0C20               	rrf	FLASH_EraseBlock@GIEBitValue,w
  4421  02AC  1C03               	skipc
  4422  02AD  138B               	bcf	11,7	;volatile
  4423  02AE  1803               	skipnc
  4424  02AF  178B               	bsf	11,7	;volatile
  4425  02B0  0008               	return
  4426  02B1                     __end_of_FLASH_EraseBlock:
  4427                           
  4428                           	psect	text18
  4429  02B1                     __ptext18:	
  4430 ;; *************** function _FLASH_ReadWord *****************
  4431 ;; Defined at:
  4432 ;;		line 58 in file "mcc_generated_files/memory.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  flashAddr       2    4[COMMON] unsigned int 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  GIEBitValue     1    0[BANK0 ] unsigned char 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  2    4[COMMON] unsigned int 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4446 ;;      Params:         2       0       0       0       0       0       0       0
  4447 ;;      Locals:         0       1       0       0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0
  4449 ;;      Totals:         2       1       0       0       0       0       0       0
  4450 ;;Total ram usage:        3 bytes
  4451 ;; Hardware stack levels used: 1
  4452 ;; Hardware stack levels required when called: 4
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_FLASH_WriteWord
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           
  4462                           ;psect for function _FLASH_ReadWord
  4463  02B1                     _FLASH_ReadWord:
  4464                           
  4465                           ;memory.c: 60: uint8_t GIEBitValue = INTCONbits.GIE;
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  4469  02B1  3000               	movlw	0
  4470  02B2  1B8B               	btfsc	11,7	;volatile
  4471  02B3  3001               	movlw	1
  4472  02B4  0140               	movlb	0	; select bank0
  4473  02B5  00A0               	movwf	FLASH_ReadWord@GIEBitValue
  4474                           
  4475                           ;memory.c: 62: INTCONbits.GIE = 0;
  4476  02B6  138B               	bcf	11,7	;volatile
  4477                           
  4478                           ;memory.c: 63: NVMADRL = (flashAddr & 0x00FF);
  4479  02B7  0874               	movf	FLASH_ReadWord@flashAddr,w
  4480  02B8  0150               	movlb	16	; select bank16
  4481  02B9  009A               	movwf	26	;volatile
  4482                           
  4483                           ;memory.c: 64: NVMADRH = ((flashAddr & 0xFF00) >> 8);
  4484  02BA  0875               	movf	FLASH_ReadWord@flashAddr+1,w
  4485  02BB  009B               	movwf	27	;volatile
  4486                           
  4487                           ;memory.c: 66: NVMCON1bits.NVMREGS = 0;
  4488  02BC  131E               	bcf	30,6	;volsfr
  4489                           
  4490                           ;memory.c: 67: NVMCON1bits.RD = 1;
  4491  02BD  141E               	bsf	30,0	;volsfr
  4492                           
  4493                           ;memory.c: 68: __nop();
  4494  02BE  0000               	nop
  4495                           
  4496                           ;memory.c: 69: __nop();
  4497  02BF  0000               	nop
  4498                           
  4499                           ;memory.c: 70: INTCONbits.GIE = GIEBitValue;
  4500  02C0  0140               	movlb	0	; select bank0
  4501  02C1  0C20               	rrf	FLASH_ReadWord@GIEBitValue,w
  4502  02C2  1C03               	skipc
  4503  02C3  138B               	bcf	11,7	;volatile
  4504  02C4  1803               	skipnc
  4505  02C5  178B               	bsf	11,7	;volatile
  4506                           
  4507                           ;memory.c: 72: return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  4508  02C6  0150               	movlb	16	; select bank16
  4509  02C7  081D               	movf	29,w	;volatile
  4510  02C8  00F5               	movwf	?_FLASH_ReadWord+1
  4511  02C9  081C               	movf	28,w	;volatile
  4512  02CA  00F4               	movwf	?_FLASH_ReadWord
  4513  02CB  0008               	return
  4514  02CC                     __end_of_FLASH_ReadWord:
  4515                           
  4516                           	psect	intentry
  4517  0004                     __pintentry:	
  4518 ;; *************** function _INTERRUPT_InterruptManager *****************
  4519 ;; Defined at:
  4520 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4534 ;;      Params:         0       0       0       0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0
  4537 ;;      Totals:         0       0       0       0       0       0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 3
  4541 ;; This function calls:
  4542 ;;		Absolute function
  4543 ;;		_EUSART1_Receive_ISR
  4544 ;;		_TMR0_ISR
  4545 ;; This function is called by:
  4546 ;;		Interrupt level 1
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550  0004                     _INTERRUPT_InterruptManager:
  4551                           
  4552                           ;incstack = 0
  4553  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4554                           
  4555                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4556  0005  3180               	pagesel	$
  4557                           
  4558                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  4559  0006  014E               	movlb	14	; select bank14
  4560  0007  1A96               	btfsc	22,5	;volatile
  4561  0008  1E8C               	btfss	12,5	;volatile
  4562  0009  280E               	goto	i1l340
  4563                           
  4564                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
  4565  000A  3183  233D  3180   	fcall	_TMR0_ISR
  4566                           
  4567                           ;interrupt_manager.c: 58: }
  4568  000D  2819               	goto	i1l346
  4569  000E                     i1l340:
  4570                           
  4571                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  4572  000E  1B0B               	btfsc	11,6	;volatile
  4573                           
  4574                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.RC1IE == 1 && PIR3bits.
      +                          RC1IF == 1)
  4575  000F  1E99               	btfss	25,5	;volatile
  4576  0010  2819               	goto	i1l346
  4577  0011  1E8F               	btfss	15,5	;volatile
  4578  0012  2819               	goto	i1l346
  4579                           
  4580                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART1_RxDefaultInterruptHandler()
      +                          ;
  4581  0013  0140               	movlb	0	; select bank0
  4582  0014  0851               	movf	_EUSART1_RxDefaultInterruptHandler+1,w
  4583  0015  008A               	movwf	10
  4584  0016  0850               	movf	_EUSART1_RxDefaultInterruptHandler,w
  4585  0017  000A               	callw
  4586  0018  3180               	pagesel	$
  4587  0019                     i1l346:	
  4588                           ;interrupt_manager.c: 70: else;interrupt_manager.c: 71: {
  4589                           
  4590                           ;interrupt_manager.c: 64: }
  4591                           
  4592  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4593  001A  0009               	retfie
  4594  001B                     __end_of_INTERRUPT_InterruptManager:
  4595                           
  4596                           	psect	text20
  4597  033D                     __ptext20:	
  4598 ;; *************** function _TMR0_ISR *****************
  4599 ;; Defined at:
  4600 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0, pclath, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4614 ;;      Params:         0       0       0       0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0
  4617 ;;      Totals:         0       0       0       0       0       0       0       0
  4618 ;;Total ram usage:        0 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 2
  4621 ;; This function calls:
  4622 ;;		_TMR0_CallBack
  4623 ;; This function is called by:
  4624 ;;		_INTERRUPT_InterruptManager
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           
  4629                           ;psect for function _TMR0_ISR
  4630  033D                     _TMR0_ISR:
  4631                           
  4632                           ;tmr0.c: 124: PIR0bits.TMR0IF = 0;
  4633                           
  4634                           ;incstack = 0
  4635                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4636  033D  014E               	movlb	14	; select bank14
  4637  033E  128C               	bcf	12,5	;volatile
  4638                           
  4639                           ;tmr0.c: 127: TMR0_CallBack();
  4640  033F  3182  22EE         	fcall	_TMR0_CallBack
  4641  0341  0008               	return
  4642  0342                     __end_of_TMR0_ISR:
  4643                           
  4644                           	psect	text21
  4645  02EE                     __ptext21:	
  4646 ;; *************** function _TMR0_CallBack *****************
  4647 ;; Defined at:
  4648 ;;		line 132 in file "mcc_generated_files/tmr0.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      void 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0, pclath, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4662 ;;      Params:         0       0       0       0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0
  4665 ;;      Totals:         0       0       0       0       0       0       0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 1
  4669 ;; This function calls:
  4670 ;;		Absolute function
  4671 ;;		_TMR0_DefaultInterruptHandler
  4672 ;; This function is called by:
  4673 ;;		_TMR0_ISR
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _TMR0_CallBack
  4679  02EE                     _TMR0_CallBack:
  4680                           
  4681                           ;tmr0.c: 135: if(TMR0_InterruptHandler)
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4685  02EE  0140               	movlb	0	; select bank0
  4686  02EF  0852               	movf	_TMR0_InterruptHandler,w
  4687  02F0  0453               	iorwf	_TMR0_InterruptHandler+1,w
  4688  02F1  1903               	btfsc	3,2
  4689  02F2  0008               	return
  4690                           
  4691                           ;tmr0.c: 136: {;tmr0.c: 137: TMR0_InterruptHandler();
  4692  02F3  0853               	movf	_TMR0_InterruptHandler+1,w
  4693  02F4  008A               	movwf	10
  4694  02F5  0852               	movf	_TMR0_InterruptHandler,w
  4695  02F6  000A               	callw
  4696  02F7  3182               	pagesel	$
  4697  02F8  0008               	return
  4698  02F9                     __end_of_TMR0_CallBack:
  4699                           
  4700                           	psect	text22
  4701  0337                     __ptext22:	
  4702 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4703 ;; Defined at:
  4704 ;;		line 145 in file "mcc_generated_files/tmr0.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4718 ;;      Params:         0       0       0       0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0
  4721 ;;      Totals:         0       0       0       0       0       0       0       0
  4722 ;;Total ram usage:        0 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_TMR0_Initialize
  4728 ;;		_TMR0_CallBack
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _TMR0_DefaultInterruptHandler
  4734  0337                     _TMR0_DefaultInterruptHandler:
  4735                           
  4736                           ;tmr0.c: 148: SystemTick++;
  4737                           
  4738                           ;incstack = 0
  4739                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg]
  4740  0337  3001               	movlw	1
  4741  0338  0140               	movlb	0	; select bank0
  4742  0339  07C8               	addwf	_SystemTick,f	;volatile
  4743  033A  3000               	movlw	0
  4744  033B  3DC9               	addwfc	_SystemTick+1,f	;volatile
  4745  033C  0008               	return
  4746  033D                     __end_of_TMR0_DefaultInterruptHandler:
  4747                           
  4748                           	psect	text23
  4749  0271                     __ptext23:	
  4750 ;; *************** function _EUSART1_Receive_ISR *****************
  4751 ;; Defined at:
  4752 ;;		line 213 in file "mcc_generated_files/eusart1.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4766 ;;      Params:         0       0       0       0       0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0
  4769 ;;      Totals:         0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:        0 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; Hardware stack levels required when called: 2
  4773 ;; This function calls:
  4774 ;;		Absolute function
  4775 ;;		_EUSART1_DefaultErrorHandler
  4776 ;;		_EUSART1_DefaultFramingErrorHandler
  4777 ;;		_EUSART1_DefaultOverrunErrorHandler
  4778 ;;		_EUSART1_RxDataHandler
  4779 ;; This function is called by:
  4780 ;;		_EUSART1_Initialize
  4781 ;;		_INTERRUPT_InterruptManager
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           
  4786                           ;psect for function _EUSART1_Receive_ISR
  4787  0271                     _EUSART1_Receive_ISR:
  4788                           
  4789                           ;eusart1.c: 216: eusart1RxLastError.status = 0;
  4790                           
  4791                           ;incstack = 0
  4792                           ; Regs used in _EUSART1_Receive_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4793  0271  01F6               	clrf	_eusart1RxLastError	;volatile
  4794                           
  4795                           ;eusart1.c: 218: if(RC1STAbits.FERR){
  4796  0272  0142               	movlb	2	; select bank2
  4797  0273  1D1D               	btfss	29,2	;volatile
  4798  0274  2A7C               	goto	i1l1646
  4799                           
  4800                           ;eusart1.c: 219: eusart1RxLastError.ferr = 1;
  4801  0275  14F6               	bsf	_eusart1RxLastError,1	;volatile
  4802                           
  4803                           ;eusart1.c: 220: EUSART1_FramingErrorHandler();
  4804  0276  0140               	movlb	0	; select bank0
  4805  0277  084F               	movf	_EUSART1_FramingErrorHandler+1,w
  4806  0278  008A               	movwf	10
  4807  0279  084E               	movf	_EUSART1_FramingErrorHandler,w
  4808  027A  000A               	callw
  4809  027B  3182               	pagesel	$
  4810  027C                     i1l1646:
  4811                           
  4812                           ;eusart1.c: 221: };eusart1.c: 223: if(RC1STAbits.OERR){
  4813  027C  0142               	movlb	2	; select bank2
  4814  027D  1C9D               	btfss	29,1	;volatile
  4815  027E  2A86               	goto	i1l1652
  4816                           
  4817                           ;eusart1.c: 224: eusart1RxLastError.oerr = 1;
  4818  027F  1576               	bsf	_eusart1RxLastError,2	;volatile
  4819                           
  4820                           ;eusart1.c: 225: EUSART1_OverrunErrorHandler();
  4821  0280  0140               	movlb	0	; select bank0
  4822  0281  084D               	movf	_EUSART1_OverrunErrorHandler+1,w
  4823  0282  008A               	movwf	10
  4824  0283  084C               	movf	_EUSART1_OverrunErrorHandler,w
  4825  0284  000A               	callw
  4826  0285  3182               	pagesel	$
  4827  0286                     i1l1652:
  4828                           
  4829                           ;eusart1.c: 226: };eusart1.c: 228: if(eusart1RxLastError.status){
  4830  0286  0876               	movf	_eusart1RxLastError,w	;volatile
  4831  0287  1903               	btfsc	3,2
  4832  0288  2A90               	goto	i1l1656
  4833                           
  4834                           ;eusart1.c: 229: EUSART1_ErrorHandler();
  4835  0289  0140               	movlb	0	; select bank0
  4836  028A  084B               	movf	_EUSART1_ErrorHandler+1,w
  4837  028B  008A               	movwf	10
  4838  028C  084A               	movf	_EUSART1_ErrorHandler,w
  4839  028D  000A               	callw
  4840  028E  3182               	pagesel	$
  4841                           
  4842                           ;eusart1.c: 230: } else {
  4843  028F  0008               	return
  4844  0290                     i1l1656:
  4845                           
  4846                           ;eusart1.c: 231: EUSART1_RxDataHandler();
  4847  0290  3181  210D         	fcall	_EUSART1_RxDataHandler
  4848  0292  0008               	return
  4849  0293                     __end_of_EUSART1_Receive_ISR:
  4850                           
  4851                           	psect	text24
  4852  0342                     __ptext24:	
  4853 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4854 ;; Defined at:
  4855 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		None
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4869 ;;      Params:         0       0       0       0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0
  4872 ;;      Totals:         0       0       0       0       0       0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_EUSART1_Initialize
  4879 ;;		_EUSART1_Receive_ISR
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
  4885  0342                     _EUSART1_DefaultOverrunErrorHandler:
  4886                           
  4887                           ;eusart1.c: 288: RC1STAbits.CREN = 0;
  4888                           
  4889                           ;incstack = 0
  4890                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
  4891  0342  0142               	movlb	2	; select bank2
  4892  0343  121D               	bcf	29,4	;volatile
  4893                           
  4894                           ;eusart1.c: 289: RC1STAbits.CREN = 1;
  4895  0344  161D               	bsf	29,4	;volatile
  4896  0345  0008               	return
  4897  0346                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  4898                           
  4899                           	psect	text25
  4900  0349                     __ptext25:	
  4901 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4902 ;; Defined at:
  4903 ;;		line 283 in file "mcc_generated_files/eusart1.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;		None
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		None
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4917 ;;      Params:         0       0       0       0       0       0       0       0
  4918 ;;      Locals:         0       0       0       0       0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0
  4920 ;;      Totals:         0       0       0       0       0       0       0       0
  4921 ;;Total ram usage:        0 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_EUSART1_Initialize
  4927 ;;		_EUSART1_Receive_ISR
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function _EUSART1_DefaultFramingErrorHandler
  4933  0349                     _EUSART1_DefaultFramingErrorHandler:
  4934                           
  4935                           ;incstack = 0
  4936                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
  4937  0349  0008               	return
  4938  034A                     __end_of_EUSART1_DefaultFramingErrorHandler:
  4939                           
  4940                           	psect	text26
  4941  0346                     __ptext26:	
  4942 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  4943 ;; Defined at:
  4944 ;;		line 293 in file "mcc_generated_files/eusart1.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4958 ;;      Params:         0       0       0       0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0
  4961 ;;      Totals:         0       0       0       0       0       0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used: 1
  4964 ;; Hardware stack levels required when called: 1
  4965 ;; This function calls:
  4966 ;;		_EUSART1_RxDataHandler
  4967 ;; This function is called by:
  4968 ;;		_EUSART1_Initialize
  4969 ;;		_EUSART1_Receive_ISR
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           
  4974                           ;psect for function _EUSART1_DefaultErrorHandler
  4975  0346                     _EUSART1_DefaultErrorHandler:
  4976                           
  4977                           ;eusart1.c: 294: EUSART1_RxDataHandler();
  4978                           
  4979                           ;incstack = 0
  4980                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4981  0346  3181  210D         	fcall	_EUSART1_RxDataHandler
  4982  0348  0008               	return
  4983  0349                     __end_of_EUSART1_DefaultErrorHandler:
  4984                           
  4985                           	psect	text27
  4986  010D                     __ptext27:	
  4987 ;; *************** function _EUSART1_RxDataHandler *****************
  4988 ;; Defined at:
  4989 ;;		line 237 in file "mcc_generated_files/eusart1.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;		None
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  i               1    3[COMMON] unsigned char 
  4994 ;;  sum             1    2[COMMON] unsigned char 
  4995 ;;  rx              1    1[COMMON] unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5005 ;;      Params:         0       0       0       0       0       0       0       0
  5006 ;;      Locals:         3       0       0       0       0       0       0       0
  5007 ;;      Temps:          1       0       0       0       0       0       0       0
  5008 ;;      Totals:         4       0       0       0       0       0       0       0
  5009 ;;Total ram usage:        4 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_EUSART1_Receive_ISR
  5015 ;;		_EUSART1_DefaultErrorHandler
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _EUSART1_RxDataHandler
  5021  010D                     _EUSART1_RxDataHandler:
  5022                           
  5023                           ;eusart1.c: 239: uint8_t rx= RC1REG;
  5024                           
  5025                           ;incstack = 0
  5026                           ; Regs used in _EUSART1_RxDataHandler: [wreg-fsr1h+status,2+status,0]
  5027  010D  0142               	movlb	2	; select bank2
  5028  010E  0819               	movf	25,w	;volatile
  5029  010F  00F0               	movwf	??_EUSART1_RxDataHandler
  5030  0110  0870               	movf	??_EUSART1_RxDataHandler,w
  5031  0111  00F1               	movwf	EUSART1_RxDataHandler@rx
  5032                           
  5033                           ;eusart1.c: 240: uint8_t i,sum=0;
  5034  0112  01F2               	clrf	EUSART1_RxDataHandler@sum
  5035                           
  5036                           ;eusart1.c: 241: if (gFlags.bMBusRx)
  5037  0113  1879               	btfsc	_gFlags,0
  5038  0114  0008               	return
  5039                           
  5040                           ;eusart1.c: 243: RxTick=SystemTick;
  5041  0115  0140               	movlb	0	; select bank0
  5042  0116  0849               	movf	_SystemTick+1,w	;volatile
  5043  0117  00C7               	movwf	_RxTick+1	;volatile
  5044  0118  0848               	movf	_SystemTick,w	;volatile
  5045  0119  00C6               	movwf	_RxTick	;volatile
  5046                           
  5047                           ;eusart1.c: 244: eusart1RxBuffer[eusart1RxCount++] = rx;
  5048  011A  0871               	movf	EUSART1_RxDataHandler@rx,w
  5049  011B  00F0               	movwf	??_EUSART1_RxDataHandler
  5050  011C  0877               	movf	_eusart1RxCount,w
  5051  011D  3E3E               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  5052  011E  0086               	movwf	6
  5053  011F  0187               	clrf	7
  5054  0120  0870               	movf	??_EUSART1_RxDataHandler,w
  5055  0121  0081               	movwf	1
  5056  0122  3001               	movlw	1
  5057  0123  00F0               	movwf	??_EUSART1_RxDataHandler
  5058  0124  0870               	movf	??_EUSART1_RxDataHandler,w
  5059  0125  07F7               	addwf	_eusart1RxCount,f	;volatile
  5060                           
  5061                           ;eusart1.c: 245: switch (eusart1RxCount)
  5062  0126  294C               	goto	i1l1458
  5063  0127                     i1l1426:
  5064                           
  5065                           ;eusart1.c: 248: if (eusart1RxBuffer[0] != 0x16)
  5066  0127  3016               	movlw	22
  5067  0128  063E               	xorwf	_eusart1RxBuffer,w	;volatile
  5068  0129                     L1:
  5069  0129  1903               	btfsc	3,2
  5070  012A  2957               	goto	i1l1460
  5071  012B                     i1l1428:
  5072                           
  5073                           ;eusart1.c: 249: eusart1RxCount = 0;
  5074  012B  01F7               	clrf	_eusart1RxCount	;volatile
  5075  012C  2957               	goto	i1l1460
  5076  012D                     i1l1430:
  5077                           
  5078                           ;eusart1.c: 252: if (eusart1RxBuffer[1] != MBusAddr)
  5079  012D  083F               	movf	_eusart1RxBuffer+1,w	;volatile
  5080  012E  0678               	xorwf	_MBusAddr,w
  5081  012F  2929               	goto	L1
  5082  0130                     i1l1434:
  5083                           
  5084                           ;eusart1.c: 260: if (eusart1RxBuffer[5] != 0x0d)
  5085  0130  300D               	movlw	13
  5086  0131  0643               	xorwf	_eusart1RxBuffer+5,w	;volatile
  5087  0132  1D03               	btfss	3,2
  5088  0133  292B               	goto	i1l1428
  5089                           
  5090                           ;eusart1.c: 262: else;eusart1.c: 263: {;eusart1.c: 264: for(i=0;i<5;i++)
  5091  0134  01F3               	clrf	EUSART1_RxDataHandler@i
  5092  0135                     i1l1444:
  5093                           
  5094                           ;eusart1.c: 265: {;eusart1.c: 266: sum+=eusart1RxBuffer[i];
  5095  0135  0873               	movf	EUSART1_RxDataHandler@i,w
  5096  0136  3E3E               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  5097  0137  0086               	movwf	6
  5098  0138  0187               	clrf	7
  5099  0139  0801               	movf	1,w
  5100  013A  00F0               	movwf	??_EUSART1_RxDataHandler
  5101  013B  0870               	movf	??_EUSART1_RxDataHandler,w
  5102  013C  07F2               	addwf	EUSART1_RxDataHandler@sum,f
  5103  013D  3001               	movlw	1
  5104  013E  00F0               	movwf	??_EUSART1_RxDataHandler
  5105  013F  0870               	movf	??_EUSART1_RxDataHandler,w
  5106  0140  07F3               	addwf	EUSART1_RxDataHandler@i,f
  5107  0141  3005               	movlw	5
  5108  0142  0273               	subwf	EUSART1_RxDataHandler@i,w
  5109  0143  1C03               	skipc
  5110  0144  2935               	goto	i1l1444
  5111                           
  5112                           ;eusart1.c: 267: };eusart1.c: 268: if(sum==eusart1RxBuffer[4])
  5113  0145  0140               	movlb	0	; select bank0
  5114  0146  0842               	movf	_eusart1RxBuffer+4,w	;volatile
  5115  0147  0672               	xorwf	EUSART1_RxDataHandler@sum,w
  5116  0148  1D03               	skipz
  5117  0149  292B               	goto	i1l1428
  5118                           
  5119                           ;eusart1.c: 269: gFlags.bMBusRx = 1;
  5120  014A  1479               	bsf	_gFlags,0
  5121  014B  2957               	goto	i1l1460
  5122  014C                     i1l1458:
  5123  014C  0877               	movf	_eusart1RxCount,w	;volatile
  5124                           
  5125                           ; Switch size 1, requested type "simple"
  5126                           ; Number of cases is 3, Range of values is 1 to 6
  5127                           ; switch strategies available:
  5128                           ; Name         Instructions Cycles
  5129                           ; simple_byte           10     6 (average)
  5130                           ; direct_byte           21     9 (fixed)
  5131                           ; jumptable            263     9 (fixed)
  5132                           ;	Chosen strategy is simple_byte
  5133  014D  3A01               	xorlw	1	; case 1
  5134  014E  1903               	skipnz
  5135  014F  2927               	goto	i1l1426
  5136  0150  3A03               	xorlw	3	; case 2
  5137  0151  1903               	skipnz
  5138  0152  292D               	goto	i1l1430
  5139  0153  3A04               	xorlw	4	; case 6
  5140  0154  1903               	skipnz
  5141  0155  2930               	goto	i1l1434
  5142  0156  2957               	goto	i1l1460
  5143  0157                     i1l1460:
  5144                           
  5145                           ;eusart1.c: 277: if(sizeof(eusart1RxBuffer) <= eusart1RxCount)
  5146  0157  3008               	movlw	8
  5147  0158  0277               	subwf	_eusart1RxCount,w	;volatile
  5148  0159  1C03               	skipc
  5149  015A  0008               	return
  5150                           
  5151                           ;eusart1.c: 278: {;eusart1.c: 279: eusart1RxCount = 0;
  5152  015B  01F7               	clrf	_eusart1RxCount	;volatile
  5153  015C  0008               	return
  5154  015D                     __end_of_EUSART1_RxDataHandler:
  5155  007E                     btemp	set	126	;btemp
  5156  007E                     int$flags	set	126
  5157  007E                     wtemp0	set	126
  5158                           
  5159                           	psect	config
  5160                           
  5161                           ;Config register CONFIG1 @ 0x8007
  5162                           ;	External Oscillator mode selection bits
  5163                           ;	FEXTOSC = OFF, Oscillator not enabled
  5164                           ;	Power-up default value for COSC bits
  5165                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  5166                           ;	Clock Out Enable bit
  5167                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  5168                           ;	Clock Switch Enable bit
  5169                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5170                           ;	Fail-Safe Clock Monitor Enable bit
  5171                           ;	FCMEN = ON, FSCM timer enabled
  5172  8007                     	org	32775
  5173  8007  3FEC               	dw	16364
  5174                           
  5175                           ;Config register CONFIG2 @ 0x8008
  5176                           ;	Master Clear Enable bit
  5177                           ;	MCLRE = ON, MCLR pin is Master Clear function
  5178                           ;	Power-up Timer Enable bit
  5179                           ;	PWRTE = OFF, PWRT disabled
  5180                           ;	Low-Power BOR enable bit
  5181                           ;	LPBOREN = OFF, ULPBOR disabled
  5182                           ;	Brown-out reset enable bits
  5183                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5184                           ;	Brown-out Reset Voltage Selection
  5185                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  5186                           ;	Zero-cross detect disable
  5187                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  5188                           ;	Peripheral Pin Select one-way control
  5189                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  5190                           ;	Stack Overflow/Underflow Reset Enable bit
  5191                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5192  8008                     	org	32776
  5193  8008  3FFF               	dw	16383
  5194                           
  5195                           ;Config register CONFIG3 @ 0x8009
  5196                           ;	WDT Period Select bits
  5197                           ;	WDTCPS = WDTCPS_10, Divider ratio 1:32768
  5198                           ;	WDT operating mode
  5199                           ;	WDTE = NSLEEP, WDT enabled while sleep=0, suspended when sleep=1; SWDTEN ignored
  5200                           ;	WDT Window Select bits
  5201                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5202                           ;	WDT input clock selector
  5203                           ;	WDTCCS = LFINTOSC, WDT reference clock is the 31.0kHz LFINTOSC output
  5204  8009                     	org	32777
  5205  8009  07CA               	dw	1994
  5206                           
  5207                           ;Config register CONFIG4 @ 0x800A
  5208                           ;	Boot Block Size Selection bits
  5209                           ;	BBSIZE = BB512, 512 words boot block size
  5210                           ;	Boot Block Enable bit
  5211                           ;	BBEN = OFF, Boot Block disabled
  5212                           ;	SAF Enable bit
  5213                           ;	SAFEN = OFF, SAF disabled
  5214                           ;	Application Block Write Protection bit
  5215                           ;	WRTAPP = OFF, Application Block not write protected
  5216                           ;	Boot Block Write Protection bit
  5217                           ;	WRTB = OFF, Boot Block not write protected
  5218                           ;	Configuration Register Write Protection bit
  5219                           ;	WRTC = OFF, Configuration Register not write protected
  5220                           ;	Storage Area Flash Write Protection bit
  5221                           ;	WRTSAF = OFF, SAF not write protected
  5222                           ;	Low Voltage Programming Enable bit
  5223                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  5224  800A                     	org	32778
  5225  800A  3FFF               	dw	16383
  5226                           
  5227                           ;Config register CONFIG5 @ 0x800B
  5228                           ;	UserNVM Program memory code protection bit
  5229                           ;	CP = OFF, UserNVM code protection disabled
  5230  800B                     	org	32779
  5231  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         80
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     30      52
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> flashBlock(BANK1[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> flashBlock(BANK1[64]), 


Critical Paths under _main in COMMON

    _main->_FLASH_ReadWord
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _RxProc->_RxAnswer
    _RxAnswer->_EUSART1_Write
    _FLASH_WriteWord->_FLASH_ReadWord
    _FLASH_WriteBlock->_FLASH_EraseBlock

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_RxProc
    _RxProc->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    5612
                                             26 BANK0      4     4      0
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                             _RxProc
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     430
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     344
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      86
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      86
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      86
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      86
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RxProc                                               5     5      0    2508
                                             21 BANK0      5     5      0
                    _FLASH_WriteWord
                           _RxAnswer
 ---------------------------------------------------------------------------------
 (2) _RxAnswer                                             4     4      0     263
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteWord                                     10     5      5    2211
                                             11 BANK0     10     5      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    10     7      3     776
                                              1 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     173
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       3     1      2     327
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     230
                   Absolute function *
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  0     0      0     230
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultErrorHandler                          0     0      0     115
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART1_RxDataHandler                                4     4      0     115
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_ReadWord
   _FLASH_WriteWord
     _FLASH_ReadWord
     _FLASH_WriteBlock
       _FLASH_EraseBlock
   _RxProc
     _FLASH_WriteWord
     _RxAnswer
       _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      7E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      34       6       65.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      7E      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 16 16:40:08 2022

                                           l261 015E                                             l271 030C  
                                           l374 0092                                             _GIE 005F  
                                           u605 0167                                             u614 0178  
                                           u615 0176                                             u555 00B9  
                                           u635 007D                         __size_of_PMD_Initialize 0008  
                                           wreg 0009                                ?_FLASH_WriteWord 002B  
                FLASH_WriteBlock@flashWordArray 0023                                            l1812 01AA  
                                          l1772 00C9                                            l1870 0069  
                                          l1784 00EF                                            l1848 0164  
                                          l1856 0192                                            l1858 019B  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          _PMD5 079B                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 _EUSART1_Write 030B                                            _main 0034  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                               ?_FLASH_WriteBlock 0021  
                                          start 001B                              ??_FLASH_WriteBlock 0024  
                       __end_of_TMR0_Initialize 02DF                  ??_TMR0_DefaultInterruptHandler 0070  
                __size_of_OSCILLATOR_Initialize 000A                   __end_of_OSCILLATOR_Initialize 0303  
                                         ?_main 0070                                           i1l340 000E  
                                         i1l346 0019                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0006  
                     ?_TMR0_SetInterruptHandler 0074                                __end_of_TMR0_ISR 0342  
                                ?_EUSART1_Write 0070                                           pclath 000A  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 034A     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0070             ?_EUSART1_DefaultFramingErrorHandler 0070  
            _EUSART1_DefaultFramingErrorHandler 0349                                 __initialization 001D  
                    __end_of_EUSART1_Initialize 0271                                    __end_of_main 00A8  
                   ?_INTERRUPT_InterruptManager 0070                                          ??_main 003A  
                              __end_of_RxAnswer 0244                         __size_of_FLASH_ReadWord 001B  
                     FLASH_WriteBlock@writeAddr 0021                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RC0PPS 1F20  
                                        _RC1STA 011D                                          i1l1430 012D  
                                        _ODCONA 1F3A                                          i1l1434 0130  
                                        i1l1426 0127                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          i1l1444 0135  
                                        i1l1428 012B                                          i1l1460 0157  
                                        i1l1458 014C                                          i1l1652 0286  
                                        i1l1646 027C                                          i1l1656 0290  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                       __size_of_FLASH_EraseBlock 001E  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                          _RxTick 0046  
                                        _RxProc 015D                                          _gFlags 0079  
                 FLASH_WriteWord@blockStartAddr 0032                        ?_EUSART1_SetErrorHandler 0074  
                           FLASH_WriteWord@word 002E                                ?_TMR0_Initialize 0070  
              ??_EUSART1_SetOverrunErrorHandler 0076                 ?_EUSART1_SetOverrunErrorHandler 0074  
                                _PMD_Initialize 0303                         FLASH_ReadWord@flashAddr 0074  
                         __end_of_TMR0_CallBack 02F9                                 ??_EUSART1_Write 0074  
      TMR0_SetInterruptHandler@InterruptHandler 0074                                 _eusart1RxBuffer 003E  
                             _SYSTEM_Initialize 02DF                         __end_of__initialization 0030  
                            ?_SYSTEM_Initialize 0070                  __size_of_EUSART1_RxDataHandler 0050  
                 __end_of_EUSART1_RxDataHandler 015D                                  __pcstackCOMMON 0070  
                           ??_SYSTEM_Initialize 0076                                       ?_TMR0_ISR 0070  
                              FLASH_WriteWord@i 0034                          __end_of_PMD_Initialize 030B  
                                    _SystemTick 0048                     __end_of_EUSART1_Receive_ISR 0293  
                                   RxAnswer@sum 0021                     FLASH_WriteBlock@GIEBitValue 0029  
                     __end_of_SYSTEM_Initialize 02EE                                      __pbssBANK0 003E  
                                    __pbssBANK1 00A0                 ??_EUSART1_SetRxInterruptHandler 0076  
                                     ?_RxAnswer 0070                 __end_of_EUSART1_SetErrorHandler 0337  
                                    __pmaintext 0034                                         ?_RxProc 0070  
              __end_of_TMR0_SetInterruptHandler 031F                                      ??_TMR0_ISR 0070  
                                    __pintentry 0004                                 ?_PMD_Initialize 0070  
                     __size_of_FLASH_WriteBlock 0065          __end_of_EUSART1_SetFramingErrorHandler 0331  
       __size_of_EUSART1_SetFramingErrorHandler 0006                  _EUSART1_SetFramingErrorHandler 032B  
                                    _flashBlock 00A0                                  _FLASH_ReadWord 02B1  
                  ?_EUSART1_DefaultErrorHandler 0070                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                         _OSCSTAT 0890  
                                       _NVMADRH 081B                                         _NVMADRL 081A  
                                       _NVMDATH 081D                                         _OSCTUNE 0892  
                                       _NVMDATL 081C                                         _NVMCON2 081F  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _PPSLOCK 1E8F  
                              _FLASH_EraseBlock 0293                        __size_of_FLASH_WriteWord 003F  
                                   RxProc@flash 0038                                      ??_RxAnswer 0075  
                               __size_of_RxProc 0040                          __end_of_FLASH_ReadWord 02CC  
                                       __ptext1 02DF                                         __ptext2 02CC  
                                       __ptext3 0319                                         __ptext4 0303  
                                       __ptext5 01DC                                         __ptext6 02F9  
                                       __ptext7 0244                                         __ptext8 031F  
                                       __ptext9 0325                         EUSART1_RxDataHandler@rx 0071  
                         _OSCILLATOR_Initialize 02F9                              _EUSART1_Initialize 0244  
                      ??_PIN_MANAGER_Initialize 0074                   ??_EUSART1_DefaultErrorHandler 0074  
                    __size_of_SYSTEM_Initialize 000F                                         clrloop0 0314  
                          end_of_initialization 0030                             ?_EUSART1_Initialize 0070  
                   _EUSART1_OverrunErrorHandler 004C           __end_of_EUSART1_SetRxInterruptHandler 0325  
        __size_of_EUSART1_SetRxInterruptHandler 0006                   _EUSART1_SetRxInterruptHandler 031F  
                     FLASH_ReadWord@GIEBitValue 0020                            ??_EUSART1_Initialize 0076  
                               ?_FLASH_ReadWord 0074                        _TMR0_SetInterruptHandler 0319  
              __size_of_EUSART1_SetErrorHandler 0006                             EUSART1_Write@txData 0074  
                             FLASH_WriteBlock@i 002A            __size_of_EUSART1_DefaultErrorHandler 0003  
                             ??_FLASH_WriteWord 0030                                  __end_of_RxProc 019D  
                             __size_of_TMR0_ISR 0005                                _FLASH_WriteBlock 00A8  
                        ?_OSCILLATOR_Initialize 0070                             start_initialization 001D  
                      __size_of_TMR0_Initialize 0013                 __size_of_PIN_MANAGER_Initialize 0037  
 EUSART1_SetRxInterruptHandler@interruptHandler 0074                           __end_of_EUSART1_Write 0313  
                                      ??_RxProc 0035                                ??_PMD_Initialize 0074  
                             __size_of_RxAnswer 0031                           _EUSART1_RxDataHandler 010D  
                        __size_of_TMR0_CallBack 000B                  ?_EUSART1_SetRxInterruptHandler 0074  
                   FLASH_EraseBlock@GIEBitValue 0020                        __end_of_FLASH_EraseBlock 02B1  
                                _eusart1RxCount 0077                                     __pbssCOMMON 0076  
             _EUSART1_RxDefaultInterruptHandler 0050                                       ___latbits 0001  
                                 __pcstackBANK0 0020                ??_EUSART1_SetFramingErrorHandler 0076  
               ?_EUSART1_SetFramingErrorHandler 0074                    __size_of_EUSART1_Receive_ISR 0022  
                         _TMR0_InterruptHandler 0052                                       __pnvBANK0 004A  
                        _PIN_MANAGER_Initialize 01DC                    ??_INTERRUPT_InterruptManager 0074  
                                      _BAUD1CON 011F      __end_of_EUSART1_DefaultOverrunErrorHandler 0346  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0070  
           ?_EUSART1_DefaultOverrunErrorHandler 0070              _EUSART1_DefaultOverrunErrorHandler 0342  
                          _EUSART1_ErrorHandler 004A                         _EUSART1_SetErrorHandler 0331  
                                 _TMR0_CallBack 02EE                          EUSART1_RxDataHandler@i 0073  
                      FLASH_WriteWord@flashAddr 002B                  FLASH_WriteBlock@blockStartAddr 0027  
                             ??_TMR0_Initialize 0076                                        _LATAbits 0018  
       EUSART1_SetErrorHandler@interruptHandler 0074                                       clear_ram0 0313  
                                      _PIE0bits 0716                                        _PIE3bits 0719  
           __size_of_INTERRUPT_InterruptManager 0017                      ??_TMR0_SetInterruptHandler 0076  
                                      _PIR0bits 070C                                        _PIR3bits 070F  
                     FLASH_EraseBlock@startAddr 0074                                ??_FLASH_ReadWord 0076  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0070  
                                      _TMR0_ISR 033D                                        _MBusAddr 0078  
                                     main@flash 003C                                 RxAnswer@command 0020  
                                ?_TMR0_CallBack 0070                                 _FLASH_WriteWord 019D  
                      __end_of_FLASH_WriteBlock 010D                                        _RxAnswer 0213  
                       ??_OSCILLATOR_Initialize 0074                     __size_of_EUSART1_Initialize 002D  
                     ??_EUSART1_SetErrorHandler 0076             __end_of_EUSART1_DefaultErrorHandler 0349  
                   _EUSART1_DefaultErrorHandler 0346                                        __ptext10 032B  
                                      __ptext11 0331                                        __ptext20 033D  
                                      __ptext12 015D                                        __ptext21 02EE  
                                      __ptext13 0213                                        __ptext22 0337  
                                      __ptext14 030B                                        __ptext23 0271  
                                      __ptext15 019D                                        __ptext24 0342  
                                      __ptext16 00A8                                        __ptext25 0349  
                                      __ptext17 0293                                        __ptext26 0346  
                                      __ptext18 02B1                                        __ptext27 010D  
                         FLASH_WriteWord@ramBuf 002D                           FLASH_WriteWord@offset 0031  
                      EUSART1_RxDataHandler@sum 0072                                   __size_of_main 0074  
          __end_of_TMR0_DefaultInterruptHandler 033D           __size_of_TMR0_DefaultInterruptHandler 0006  
                  _TMR0_DefaultInterruptHandler 0337                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0074                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 001B                      _INTERRUPT_InterruptManager 0004  
                   _EUSART1_FramingErrorHandler 004E                             _EUSART1_Receive_ISR 0271  
                             ?_FLASH_EraseBlock 0074                              ??_FLASH_EraseBlock 0076  
                                    _INTCONbits 000B                         __end_of_FLASH_WriteWord 01DC  
                               ??_TMR0_CallBack 0070                                     _NVMCON1bits 081E  
                                      intlevel1 0000                            ?_EUSART1_Receive_ISR 0070  
                       ?_PIN_MANAGER_Initialize 0070          __end_of_EUSART1_SetOverrunErrorHandler 032B  
       __size_of_EUSART1_SetOverrunErrorHandler 0006                  _EUSART1_SetOverrunErrorHandler 0325  
                 ?_TMR0_DefaultInterruptHandler 0070  EUSART1_SetFramingErrorHandler@interruptHandler 0074  
                        __size_of_EUSART1_Write 0008                              _eusart1RxLastError 0076  
                               _TMR0_Initialize 02CC                           ??_EUSART1_Receive_ISR 0074  
                __end_of_PIN_MANAGER_Initialize 0213                         ??_EUSART1_RxDataHandler 0070  
